{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2023-12-18T22:21:08.034872Z", "invocation_id": "7bd09977-1a47-4494-a3f4-5aff668a3e0f", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.049748Z", "completed_at": "2023-12-18T22:21:07.077513Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.079720Z", "completed_at": "2023-12-18T22:21:07.079738Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033859968185424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"change_request_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.069280Z", "completed_at": "2023-12-18T22:21:07.078108Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.080028Z", "completed_at": "2023-12-18T22:21:07.080031Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03349924087524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"change_task_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.072400Z", "completed_at": "2023-12-18T22:21:07.078426Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.080536Z", "completed_at": "2023-12-18T22:21:07.080539Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.033652305603027344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"incident_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.074794Z", "completed_at": "2023-12-18T22:21:07.079215Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.081828Z", "completed_at": "2023-12-18T22:21:07.081831Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.034184932708740234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"problem_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.089934Z", "completed_at": "2023-12-18T22:21:07.098784Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.099483Z", "completed_at": "2023-12-18T22:21:07.099489Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016129732131958008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"sys_user_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.087273Z", "completed_at": "2023-12-18T22:21:07.099749Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.102411Z", "completed_at": "2023-12-18T22:21:07.102418Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020005226135253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"problem_task_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.092408Z", "completed_at": "2023-12-18T22:21:07.100002Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.102767Z", "completed_at": "2023-12-18T22:21:07.102775Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019235849380493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"task_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.095277Z", "completed_at": "2023-12-18T22:21:07.100929Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.103590Z", "completed_at": "2023-12-18T22:21:07.103594Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018777132034301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"task_sla_data\"", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.106185Z", "completed_at": "2023-12-18T22:21:07.107418Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.110041Z", "completed_at": "2023-12-18T22:21:07.110046Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010125160217285156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.change_request_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.110518Z", "completed_at": "2023-12-18T22:21:07.111528Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.115777Z", "completed_at": "2023-12-18T22:21:07.115782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009037017822265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.change_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.111868Z", "completed_at": "2023-12-18T22:21:07.112787Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.116049Z", "completed_at": "2023-12-18T22:21:07.116052Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009202957153320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.incident_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.113585Z", "completed_at": "2023-12-18T22:21:07.114501Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.116740Z", "completed_at": "2023-12-18T22:21:07.116745Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009283781051635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.problem_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.119347Z", "completed_at": "2023-12-18T22:21:07.120364Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.122815Z", "completed_at": "2023-12-18T22:21:07.122819Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010205984115600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.problem_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.123275Z", "completed_at": "2023-12-18T22:21:07.124963Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.129391Z", "completed_at": "2023-12-18T22:21:07.129402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009972095489501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.sys_user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.125237Z", "completed_at": "2023-12-18T22:21:07.126094Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.129770Z", "completed_at": "2023-12-18T22:21:07.129773Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009949207305908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.126825Z", "completed_at": "2023-12-18T22:21:07.127782Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.130509Z", "completed_at": "2023-12-18T22:21:07.130513Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009971857070922852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.task_sla_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.151358Z", "completed_at": "2023-12-18T22:21:07.507922Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.509744Z", "completed_at": "2023-12-18T22:21:07.509754Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.39414095878601074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause_notes\n    \n as \n    \n    cause_notes\n    \n, \n    \n    \n    confirmed_at\n    \n as \n    \n    confirmed_at\n    \n, \n    \n    \n    confirmed_by_link\n    \n as \n    \n    confirmed_by_link\n    \n, \n    \n    \n    confirmed_by_value\n    \n as \n    \n    confirmed_by_value\n    \n, \n    \n    \n    duplicate_of_link\n    \n as \n    \n    duplicate_of_link\n    \n, \n    \n    \n    duplicate_of_value\n    \n as \n    \n    duplicate_of_value\n    \n, \n    \n    \n    first_reported_by_task_link\n    \n as \n    \n    first_reported_by_task_link\n    \n, \n    \n    \n    first_reported_by_task_value\n    \n as \n    \n    first_reported_by_task_value\n    \n, \n    \n    \n    fix_at\n    \n as \n    \n    fix_at\n    \n, \n    \n    \n    fix_by_link\n    \n as \n    \n    fix_by_link\n    \n, \n    \n    \n    fix_by_value\n    \n as \n    \n    fix_by_value\n    \n, \n    \n    \n    fix_communicated_at\n    \n as \n    \n    fix_communicated_at\n    \n, \n    \n    \n    fix_communicated_by_link\n    \n as \n    \n    fix_communicated_by_link\n    \n, \n    \n    \n    fix_communicated_by_value\n    \n as \n    \n    fix_communicated_by_value\n    \n, \n    \n    \n    fix_notes\n    \n as \n    \n    fix_notes\n    \n, \n    \n    \n    known_error\n    \n as \n    \n    known_error\n    \n, \n    \n    \n    major_problem\n    \n as \n    \n    major_problem\n    \n, \n    \n    \n    problem_state\n    \n as \n    \n    problem_state\n    \n, \n    \n    \n    related_incidents\n    \n as \n    \n    related_incidents\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    resolution_code\n    \n as \n    \n    resolution_code\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    review_outcome\n    \n as \n    \n    review_outcome\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    workaround\n    \n as \n    \n    workaround\n    \n, \n    \n    \n    workaround_applied\n    \n as \n    \n    workaround_applied\n    \n, \n    \n    \n    workaround_communicated_at\n    \n as \n    \n    workaround_communicated_at\n    \n, \n    \n    \n    workaround_communicated_by_link\n    \n as \n    \n    workaround_communicated_by_link\n    \n, \n    \n    \n    workaround_communicated_by_value\n    \n as \n    \n    workaround_communicated_by_value\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as problem_id,\n        cast(sys_created_on as timestamp) as problem_created_at,\n        cast(sys_updated_on as timestamp) as problem_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        category as problem_category,\n        cause_notes,\n        confirmed_at as problem_confirmed_at,\n        confirmed_by_link as problem_confirmed_by_link,\n        confirmed_by_value as problem_confirmed_by_value,\n        duplicate_of_link,\n        duplicate_of_value,\n        first_reported_by_task_link as problem_first_reported_by_task_link,\n        first_reported_by_task_value as problem_first_reported_by_task_value,\n        fix_at as problem_fix_at,\n        fix_by_link as problem_fix_by_link,\n        fix_by_value as problem_fix_by_value,\n        fix_communicated_at,\n        fix_communicated_by_link,\n        fix_communicated_by_value,\n        fix_notes as problem_fix_notes,\n        known_error as is_known_error,\n        major_problem as is_major_problem,\n        problem_state,\n        related_incidents as problem_related_incidents,\n        reopen_count,\n        reopened_at,\n        reopened_by_link,\n        reopened_by_value,\n        resolution_code as problem_resolution_code,\n        resolved_at as problem_resolved_at,\n        resolved_by_link,\n        resolved_by_value as problem_resolved_by_value,\n        review_outcome,\n        rfc_link,\n        rfc_value,\n        subcategory as problem_subcategory,\n        workaround,\n        workaround_applied,\n        workaround_communicated_at,\n        workaround_communicated_by_link,\n        workaround_communicated_by_value\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.142397Z", "completed_at": "2023-12-18T22:21:07.509454Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.511678Z", "completed_at": "2023-12-18T22:21:07.511683Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.40279316902160645, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    change_request_link\n    \n as \n    \n    change_request_link\n    \n, \n    \n    \n    change_request_value\n    \n as \n    \n    change_request_value\n    \n, \n    \n    \n    change_task_type\n    \n as \n    \n    change_task_type\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    created_from\n    \n as \n    \n    created_from\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    planned_end_date\n    \n as \n    \n    planned_end_date\n    \n, \n    \n    \n    planned_start_date\n    \n as \n    \n    planned_start_date\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as change_task_id,\n        cast(sys_created_on as timestamp) as change_task_created_at,\n        cast(sys_updated_on as timestamp) as change_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        change_request_link,\n        change_request_value,\n        change_task_type,\n        close_code as change_task_close_code,\n        created_from as change_task_created_from,\n        on_hold as is_change_on_hold,\n        on_hold_reason as change_on_hold_reason,\n        planned_end_date as change_task_planned_end_date,\n        planned_start_date as change_task_planned_start_date\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.132907Z", "completed_at": "2023-12-18T22:21:07.508898Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.511073Z", "completed_at": "2023-12-18T22:21:07.511078Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4131321907043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    backout_plan\n    \n as \n    \n    backout_plan\n    \n, \n    \n    \n    cab_date\n    \n as \n    \n    cab_date\n    \n, \n    \n    \n    cab_date_time\n    \n as \n    \n    cab_date_time\n    \n, \n    \n    \n    cab_delegate_link\n    \n as \n    \n    cab_delegate_link\n    \n, \n    \n    \n    cab_delegate_value\n    \n as \n    \n    cab_delegate_value\n    \n, \n    \n    \n    cab_recommendation\n    \n as \n    \n    cab_recommendation\n    \n, \n    \n    \n    cab_required\n    \n as \n    \n    cab_required\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    change_plan\n    \n as \n    \n    change_plan\n    \n, \n    \n    \n    chg_model_link\n    \n as \n    \n    chg_model_link\n    \n, \n    \n    \n    chg_model_value\n    \n as \n    \n    chg_model_value\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    conflict_last_run\n    \n as \n    \n    conflict_last_run\n    \n, \n    \n    \n    conflict_status\n    \n as \n    \n    conflict_status\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    implementation_plan\n    \n as \n    \n    implementation_plan\n    \n, \n    \n    \n    justification\n    \n as \n    \n    justification\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    on_hold_task\n    \n as \n    \n    on_hold_task\n    \n, \n    \n    \n    outside_maintenance_schedule\n    \n as \n    \n    outside_maintenance_schedule\n    \n, \n    \n    \n    phase\n    \n as \n    \n    phase\n    \n, \n    \n    \n    phase_state\n    \n as \n    \n    phase_state\n    \n, \n    \n    \n    production_system\n    \n as \n    \n    production_system\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    requested_by_date\n    \n as \n    \n    requested_by_date\n    \n, \n    \n    \n    requested_by_link\n    \n as \n    \n    requested_by_link\n    \n, \n    \n    \n    requested_by_value\n    \n as \n    \n    requested_by_value\n    \n, \n    \n    \n    review_comments\n    \n as \n    \n    review_comments\n    \n, \n    \n    \n    review_date\n    \n as \n    \n    review_date\n    \n, \n    \n    \n    review_status\n    \n as \n    \n    review_status\n    \n, \n    \n    \n    risk\n    \n as \n    \n    risk\n    \n, \n    \n    \n    risk_impact_analysis\n    \n as \n    \n    risk_impact_analysis\n    \n, \n    \n    \n    scope\n    \n as \n    \n    scope\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    std_change_producer_version_link\n    \n as \n    \n    std_change_producer_version_link\n    \n, \n    \n    \n    std_change_producer_version_value\n    \n as \n    \n    std_change_producer_version_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    test_plan\n    \n as \n    \n    test_plan\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unauthorized\n    \n as \n    \n    unauthorized\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as change_id,\n        cast(sys_created_on as timestamp) as change_created_at,\n        cast(sys_updated_on as timestamp) as change_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        backout_plan,\n        cab_date,\n        cab_date_time,\n        cab_delegate_link,\n        cab_delegate_value,\n        cab_recommendation,\n        cab_required as is_cab_required,\n        category as change_category,\n        change_plan,\n        chg_model_link,\n        chg_model_value,\n        close_code as change_close_code,\n        conflict_last_run,\n        conflict_status,\n        end_date as change_end_date,\n        implementation_plan as change_implementation_plan,\n        justification as change_justification,\n        on_hold as is_change_on_hold,\n        on_hold_reason as change_on_hold_reason,\n        on_hold_task,\n        outside_maintenance_schedule,\n        phase as change_phase,\n        phase_state as change_phase_state,\n        production_system as is_production_system,\n        reason as change_reason,\n        requested_by_date as change_requested_by_date,\n        requested_by_link as change_requested_by_link,\n        requested_by_value as change_requested_by_value,\n        review_comments,\n        review_date as change_review_date,\n        review_status as change_review_status,\n        risk as change_risk,\n        risk_impact_analysis,\n        scope as change_scope,\n        start_date as change_start_date,\n        std_change_producer_version_link,\n        std_change_producer_version_value,\n        test_plan as change_test_plan,\n        type as change_type,\n        unauthorized as is_change_unauthorized\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.147233Z", "completed_at": "2023-12-18T22:21:07.508297Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.510287Z", "completed_at": "2023-12-18T22:21:07.510290Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4033629894256592, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_impact\n    \n as \n    \n    business_impact\n    \n, \n    \n    \n    business_stc\n    \n as \n    \n    business_stc\n    \n, \n    \n    \n    calendar_stc\n    \n as \n    \n    calendar_stc\n    \n, \n    \n    \n    caller_id_link\n    \n as \n    \n    caller_id_link\n    \n, \n    \n    \n    caller_id_value\n    \n as \n    \n    caller_id_value\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause\n    \n as \n    \n    cause\n    \n, \n    \n    \n    caused_by_link\n    \n as \n    \n    caused_by_link\n    \n, \n    \n    \n    caused_by_value\n    \n as \n    \n    caused_by_value\n    \n, \n    \n    \n    child_incidents\n    \n as \n    \n    child_incidents\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    hold_reason\n    \n as \n    \n    hold_reason\n    \n, \n    \n    \n    incident_state\n    \n as \n    \n    incident_state\n    \n, \n    \n    \n    notify\n    \n as \n    \n    notify\n    \n, \n    \n    \n    origin_id_link\n    \n as \n    \n    origin_id_link\n    \n, \n    \n    \n    origin_id_value\n    \n as \n    \n    origin_id_value\n    \n, \n    \n    \n    parent_incident_link\n    \n as \n    \n    parent_incident_link\n    \n, \n    \n    \n    parent_incident_value\n    \n as \n    \n    parent_incident_value\n    \n, \n    \n    \n    problem_id_link\n    \n as \n    \n    problem_id_link\n    \n, \n    \n    \n    problem_id_value\n    \n as \n    \n    problem_id_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    reopened_time\n    \n as \n    \n    reopened_time\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    severity\n    \n as \n    \n    severity\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as incident_id,\n        cast(sys_created_on as timestamp) as incident_created_at,\n        cast(sys_updated_on as timestamp) as incident_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        business_impact,\n        business_stc,\n        calendar_stc,\n        caller_id_link,\n        caller_id_value,\n        category,\n        cause,\n        caused_by_link,\n        caused_by_value,\n        child_incidents,\n        close_code,\n        hold_reason,\n        incident_state,\n        notify,\n        origin_id_link,\n        origin_id_value,\n        parent_incident_link,\n        parent_incident_value,\n        problem_id_link,\n        problem_id_value,\n        reopen_count,\n        reopened_by_link,\n        reopened_by_value,\n        reopened_time,\n        resolved_at,\n        resolved_by_link,\n        resolved_by_value,\n        rfc_link,\n        rfc_value,\n        severity,\n        subcategory\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.536600Z", "completed_at": "2023-12-18T22:21:07.828311Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.828825Z", "completed_at": "2023-12-18T22:21:07.828835Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.32012009620666504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accumulated_roles\n    \n as \n    \n    accumulated_roles\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    avatar\n    \n as \n    \n    avatar\n    \n, \n    \n    \n    building_link\n    \n as \n    \n    building_link\n    \n, \n    \n    \n    building_value\n    \n as \n    \n    building_value\n    \n, \n    \n    \n    calendar_integration\n    \n as \n    \n    calendar_integration\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_format\n    \n as \n    \n    date_format\n    \n, \n    \n    \n    default_perspective_link\n    \n as \n    \n    default_perspective_link\n    \n, \n    \n    \n    default_perspective_value\n    \n as \n    \n    default_perspective_value\n    \n, \n    \n    \n    department_link\n    \n as \n    \n    department_link\n    \n, \n    \n    \n    department_value\n    \n as \n    \n    department_value\n    \n, \n    \n    \n    edu_status\n    \n as \n    \n    edu_status\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    employee_number\n    \n as \n    \n    employee_number\n    \n, \n    \n    \n    enable_multifactor_authn\n    \n as \n    \n    enable_multifactor_authn\n    \n, \n    \n    \n    failed_attempts\n    \n as \n    \n    failed_attempts\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    gender\n    \n as \n    \n    gender\n    \n, \n    \n    \n    hashed_user_id\n    \n as \n    \n    hashed_user_id\n    \n, \n    \n    \n    home_phone\n    \n as \n    \n    home_phone\n    \n, \n    \n    \n    internal_integration_user\n    \n as \n    \n    internal_integration_user\n    \n, \n    \n    \n    introduction\n    \n as \n    \n    introduction\n    \n, \n    \n    \n    last_login\n    \n as \n    \n    last_login\n    \n, \n    \n    \n    last_login_device\n    \n as \n    \n    last_login_device\n    \n, \n    \n    \n    last_login_time\n    \n as \n    \n    last_login_time\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_password\n    \n as \n    \n    last_password\n    \n, \n    \n    \n    ldap_server_link\n    \n as \n    \n    ldap_server_link\n    \n, \n    \n    \n    ldap_server_value\n    \n as \n    \n    ldap_server_value\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    locked_out\n    \n as \n    \n    locked_out\n    \n, \n    \n    \n    manager_link\n    \n as \n    \n    manager_link\n    \n, \n    \n    \n    manager_value\n    \n as \n    \n    manager_value\n    \n, \n    \n    \n    middle_name\n    \n as \n    \n    middle_name\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notification\n    \n as \n    \n    notification\n    \n, \n    \n    \n    password_needs_reset\n    \n as \n    \n    password_needs_reset\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    photo\n    \n as \n    \n    photo\n    \n, \n    \n    \n    preferred_language\n    \n as \n    \n    preferred_language\n    \n, \n    \n    \n    roles\n    \n as \n    \n    roles\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    time_format\n    \n as \n    \n    time_format\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    user_name\n    \n as \n    \n    user_name\n    \n, \n    \n    \n    user_password\n    \n as \n    \n    user_password\n    \n, \n    \n    \n    vip\n    \n as \n    \n    vip\n    \n, \n    \n    \n    web_service_access_only\n    \n as \n    \n    web_service_access_only\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as user_id,\n        cast(sys_created_on as timestamp) as user_created_at,\n        cast(sys_updated_on as timestamp) as user_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        accumulated_roles,\n        active as is_active,\n        avatar,\n        building_link,\n        building_value,\n        calendar_integration,\n        city,\n        company_link,\n        company_value,\n        cost_center_link,\n        cost_center_value,\n        country,\n        date_format,\n        default_perspective_link,\n        default_perspective_value,\n        department_link,\n        department_value,\n        edu_status,\n        email,\n        employee_number,\n        enable_multifactor_authn,\n        failed_attempts,\n        first_name,\n        gender,\n        hashed_user_id,\n        home_phone,\n        internal_integration_user,\n        introduction,\n        last_login as last_login_day_date,\n        last_login_device,\n        last_login_time as last_login_at,\n        last_name,\n        last_password,\n        ldap_server_link,\n        ldap_server_value,\n        location_link,\n        location_value,\n        locked_out,\n        manager_link,\n        manager_value,\n        middle_name,\n        mobile_phone,\n        name as sys_user_name,\n        notification,\n        password_needs_reset,\n        phone,\n        photo,\n        preferred_language,\n        roles,\n        schedule_link,\n        schedule_value,\n        source,\n        state,\n        sys_class_name,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        time_format,\n        time_zone,\n        title,\n        user_name,\n        user_password,\n        vip,\n        web_service_access_only,\n        zip\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.857406Z", "completed_at": "2023-12-18T22:21:07.864878Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.865389Z", "completed_at": "2023-12-18T22:21:07.865394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009063005447387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_problem_id.2b0f45ffad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\"\nwhere problem_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.866956Z", "completed_at": "2023-12-18T22:21:07.896568Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.936515Z", "completed_at": "2023-12-18T22:21:07.936523Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0709681510925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__problem_problem_id.feef96ad07", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    problem_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\"\nwhere problem_id is not null\ngroup by problem_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.941309Z", "completed_at": "2023-12-18T22:21:07.944957Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.945450Z", "completed_at": "2023-12-18T22:21:07.945454Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006428956985473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_task_change_task_id.2d5ae34a7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_task_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\"\nwhere change_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.947161Z", "completed_at": "2023-12-18T22:21:07.950099Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.950587Z", "completed_at": "2023-12-18T22:21:07.950592Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004513740539550781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__change_task_change_task_id.72b2f629a5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    change_task_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\"\nwhere change_task_id is not null\ngroup by change_task_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.952272Z", "completed_at": "2023-12-18T22:21:07.955351Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.955873Z", "completed_at": "2023-12-18T22:21:07.955878Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004719257354736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_request_change_id.91d0baabbd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\"\nwhere change_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.957486Z", "completed_at": "2023-12-18T22:21:07.960281Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.960773Z", "completed_at": "2023-12-18T22:21:07.960778Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0042591094970703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__incident_incident_id.b01cee4a78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect incident_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\"\nwhere incident_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.962333Z", "completed_at": "2023-12-18T22:21:07.965144Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.965626Z", "completed_at": "2023-12-18T22:21:07.965630Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0042760372161865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__change_request_change_id.26d9df2b5a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    change_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\"\nwhere change_id is not null\ngroup by change_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.547501Z", "completed_at": "2023-12-18T22:21:07.936782Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.938934Z", "completed_at": "2023-12-18T22:21:07.938937Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.42591166496276855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cause_code\n    \n as \n    \n    cause_code\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    other_reason\n    \n as \n    \n    other_reason\n    \n, \n    \n    \n    problem_link\n    \n as \n    \n    problem_link\n    \n, \n    \n    \n    problem_task_type\n    \n as \n    \n    problem_task_type\n    \n, \n    \n    \n    problem_value\n    \n as \n    \n    problem_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    started_at\n    \n as \n    \n    started_at\n    \n, \n    \n    \n    started_by_link\n    \n as \n    \n    started_by_link\n    \n, \n    \n    \n    started_by_value\n    \n as \n    \n    started_by_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    vendor_link\n    \n as \n    \n    vendor_link\n    \n, \n    \n    \n    vendor_value\n    \n as \n    \n    vendor_value\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as problem_task_id,\n        cast(sys_created_on as timestamp) as problem_task_created_at,\n        cast(sys_updated_on as timestamp) as problem_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cause_code as problem_task_cause_code,\n        close_code as problem_task_close_code,\n        other_reason,\n        problem_link,\n        problem_task_type,\n        problem_value,\n        reopen_count,\n        reopened_at,\n        reopened_by_link,\n        reopened_by_value,\n        started_at as problem_task_started_at,\n        started_by_link,\n        started_by_value,\n        vendor_link,\n        vendor_value\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.551740Z", "completed_at": "2023-12-18T22:21:07.938621Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.940804Z", "completed_at": "2023-12-18T22:21:07.940807Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.42730712890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    activity_due\n    \n as \n    \n    activity_due\n    \n, \n    \n    \n    additional_assignee_list\n    \n as \n    \n    additional_assignee_list\n    \n, \n    \n    \n    approval\n    \n as \n    \n    approval\n    \n, \n    \n    \n    approval_history\n    \n as \n    \n    approval_history\n    \n, \n    \n    \n    approval_set\n    \n as \n    \n    approval_set\n    \n, \n    \n    \n    assigned_to_link\n    \n as \n    \n    assigned_to_link\n    \n, \n    \n    \n    assigned_to_value\n    \n as \n    \n    assigned_to_value\n    \n, \n    \n    \n    assignment_group_link\n    \n as \n    \n    assignment_group_link\n    \n, \n    \n    \n    assignment_group_value\n    \n as \n    \n    assignment_group_value\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_service_link\n    \n as \n    \n    business_service_link\n    \n, \n    \n    \n    business_service_value\n    \n as \n    \n    business_service_value\n    \n, \n    \n    \n    calendar_duration\n    \n as \n    \n    calendar_duration\n    \n, \n    \n    \n    close_notes\n    \n as \n    \n    close_notes\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    closed_by_link\n    \n as \n    \n    closed_by_link\n    \n, \n    \n    \n    closed_by_value\n    \n as \n    \n    closed_by_value\n    \n, \n    \n    \n    cmdb_ci_link\n    \n as \n    \n    cmdb_ci_link\n    \n, \n    \n    \n    cmdb_ci_value\n    \n as \n    \n    cmdb_ci_value\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    comments_and_work_notes\n    \n as \n    \n    comments_and_work_notes\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    contact_type\n    \n as \n    \n    contact_type\n    \n, \n    \n    \n    contract_link\n    \n as \n    \n    contract_link\n    \n, \n    \n    \n    contract_value\n    \n as \n    \n    contract_value\n    \n, \n    \n    \n    correlation_display\n    \n as \n    \n    correlation_display\n    \n, \n    \n    \n    correlation_id\n    \n as \n    \n    correlation_id\n    \n, \n    \n    \n    delivery_plan_link\n    \n as \n    \n    delivery_plan_link\n    \n, \n    \n    \n    delivery_plan_value\n    \n as \n    \n    delivery_plan_value\n    \n, \n    \n    \n    delivery_task_link\n    \n as \n    \n    delivery_task_link\n    \n, \n    \n    \n    delivery_task_value\n    \n as \n    \n    delivery_task_value\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    escalation\n    \n as \n    \n    escalation\n    \n, \n    \n    \n    expected_start\n    \n as \n    \n    expected_start\n    \n, \n    \n    \n    follow_up\n    \n as \n    \n    follow_up\n    \n, \n    \n    \n    group_list\n    \n as \n    \n    group_list\n    \n, \n    \n    \n    impact\n    \n as \n    \n    impact\n    \n, \n    \n    \n    knowledge\n    \n as \n    \n    knowledge\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    made_sla\n    \n as \n    \n    made_sla\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    opened_at\n    \n as \n    \n    opened_at\n    \n, \n    \n    \n    opened_by_link\n    \n as \n    \n    opened_by_link\n    \n, \n    \n    \n    opened_by_value\n    \n as \n    \n    opened_by_value\n    \n, \n    \n    \n        \n            \n            \"order\"\n            \n        \n    \n as task_order , \n    \n    \n    parent_link\n    \n as \n    \n    parent_link\n    \n, \n    \n    \n    parent_value\n    \n as \n    \n    parent_value\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    reassignment_count\n    \n as \n    \n    reassignment_count\n    \n, \n    \n    \n    rejection_goto_link\n    \n as \n    \n    rejection_goto_link\n    \n, \n    \n    \n    rejection_goto_value\n    \n as \n    \n    rejection_goto_value\n    \n, \n    \n    \n    route_reason\n    \n as \n    \n    route_reason\n    \n, \n    \n    \n    service_offering_link\n    \n as \n    \n    service_offering_link\n    \n, \n    \n    \n    service_offering_value\n    \n as \n    \n    service_offering_value\n    \n, \n    \n    \n    short_description\n    \n as \n    \n    short_description\n    \n, \n    \n    \n    sla_due\n    \n as \n    \n    sla_due\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_effective_number\n    \n as \n    \n    task_effective_number\n    \n, \n    \n    \n    universal_request_link\n    \n as \n    \n    universal_request_link\n    \n, \n    \n    \n    universal_request_value\n    \n as \n    \n    universal_request_value\n    \n, \n    \n    \n    upon_approval\n    \n as \n    \n    upon_approval\n    \n, \n    \n    \n    upon_reject\n    \n as \n    \n    upon_reject\n    \n, \n    \n    \n    urgency\n    \n as \n    \n    urgency\n    \n, \n    \n    \n    watch_list\n    \n as \n    \n    watch_list\n    \n, \n    \n    \n    wf_activity_link\n    \n as \n    \n    wf_activity_link\n    \n, \n    \n    \n    wf_activity_value\n    \n as \n    \n    wf_activity_value\n    \n, \n    \n    \n    work_end\n    \n as \n    \n    work_end\n    \n, \n    \n    \n    work_notes\n    \n as \n    \n    work_notes\n    \n, \n    \n    \n    work_notes_list\n    \n as \n    \n    work_notes_list\n    \n, \n    \n    \n    work_start\n    \n as \n    \n    work_start\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as task_id,\n        cast(sys_created_on as timestamp) as task_created_at,\n        cast(sys_updated_on as timestamp) as task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_task_active,\n        activity_due,\n        additional_assignee_list,\n        approval,\n        approval_history,\n        approval_set,\n        assigned_to_link,\n        assigned_to_value,\n        assignment_group_link,\n        assignment_group_value,\n        business_duration,\n        business_service_link,\n        business_service_value,\n        calendar_duration,\n        close_notes,\n        closed_at,\n        closed_by_link,\n        closed_by_value,\n        cmdb_ci_link,\n        cmdb_ci_value,\n        comments,\n        comments_and_work_notes,\n        company_link,\n        company_value,\n        contact_type,\n        contract_link,\n        contract_value,\n        correlation_display,\n        correlation_id,\n        delivery_plan_link,\n        delivery_plan_value,\n        delivery_task_link,\n        delivery_task_value,\n        description as task_description,\n        due_date as task_due_date_at,\n        escalation,\n        expected_start,\n        follow_up as task_follow_up_at,\n        group_list,\n        impact,\n        knowledge,\n        location_link,\n        location_value,\n        made_sla,\n        number as task_number,\n        opened_at as task_opened_at,\n        opened_by_link,\n        opened_by_value,\n        task_order, -- Renamed within the get_task_columns() macro.\n        parent_link,\n        parent_value,\n        priority,\n        reassignment_count,\n        rejection_goto_link,\n        rejection_goto_value,\n        route_reason,\n        service_offering_link,\n        service_offering_value,\n        short_description,\n        sla_due,\n        state as task_state,\n        sys_class_name,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        task_effective_number,\n        universal_request_link,\n        universal_request_value,\n        upon_approval,\n        upon_reject,\n        urgency,\n        watch_list,\n        wf_activity_link,\n        wf_activity_value,\n        work_end,\n        work_notes,\n        work_notes_list,\n        work_start\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.555574Z", "completed_at": "2023-12-18T22:21:07.937985Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.940316Z", "completed_at": "2023-12-18T22:21:07.940320Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.42751312255859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_pause_duration\n    \n as \n    \n    business_pause_duration\n    \n, \n    \n    \n    business_percentage\n    \n as \n    \n    business_percentage\n    \n, \n    \n    \n    business_time_left\n    \n as \n    \n    business_time_left\n    \n, \n    \n    \n    duration\n    \n as \n    \n    duration\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    has_breached\n    \n as \n    \n    has_breached\n    \n, \n    \n    \n    original_breach_time\n    \n as \n    \n    original_breach_time\n    \n, \n    \n    \n    pause_duration\n    \n as \n    \n    pause_duration\n    \n, \n    \n    \n    pause_time\n    \n as \n    \n    pause_time\n    \n, \n    \n    \n    percentage\n    \n as \n    \n    percentage\n    \n, \n    \n    \n    planned_end_time\n    \n as \n    \n    planned_end_time\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    sla_link\n    \n as \n    \n    sla_link\n    \n, \n    \n    \n    sla_value\n    \n as \n    \n    sla_value\n    \n, \n    \n    \n    stage\n    \n as \n    \n    stage\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_link\n    \n as \n    \n    task_link\n    \n, \n    \n    \n    task_value\n    \n as \n    \n    task_value\n    \n, \n    \n    \n    time_left\n    \n as \n    \n    time_left\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as task_sla_id,\n        cast(sys_created_on as timestamp) as task_sla_created_at,\n        cast(sys_updated_on as timestamp) as task_sla_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active,\n        business_duration,\n        business_pause_duration,\n        business_percentage,\n        business_time_left,\n        duration,\n        end_time,\n        has_breached,\n        original_breach_time,\n        pause_duration,\n        pause_time,\n        percentage,\n        planned_end_time,\n        schedule_link,\n        schedule_value,\n        sla_link,\n        sla_value,\n        stage,\n        start_time,\n        sys_created_by,\n        sys_mod_count,\n        sys_updated_by,\n        task_link,\n        task_value,\n        time_left,\n        timezone\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.967441Z", "completed_at": "2023-12-18T22:21:07.971457Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.974323Z", "completed_at": "2023-12-18T22:21:07.974327Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008896112442016602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__incident_incident_id.e82862c32f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    incident_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\"\nwhere incident_id is not null\ngroup by incident_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.975884Z", "completed_at": "2023-12-18T22:21:07.981199Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.988939Z", "completed_at": "2023-12-18T22:21:07.988948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02069878578186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_user_id.90a8733b9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.981944Z", "completed_at": "2023-12-18T22:21:07.989390Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.995323Z", "completed_at": "2023-12-18T22:21:07.995331Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01800394058227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__sys_user_user_id.428ffd6dc2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.985104Z", "completed_at": "2023-12-18T22:21:07.989728Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.995777Z", "completed_at": "2023-12-18T22:21:07.995785Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.018090009689331055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_task_problem_task_id.2d07d24f54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_task_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\"\nwhere problem_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.989994Z", "completed_at": "2023-12-18T22:21:07.996093Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:07.999502Z", "completed_at": "2023-12-18T22:21:07.999525Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028227806091308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__problem_task_problem_task_id.601d1d819a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    problem_task_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\"\nwhere problem_task_id is not null\ngroup by problem_task_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:07.999849Z", "completed_at": "2023-12-18T22:21:08.016941Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:08.024996Z", "completed_at": "2023-12-18T22:21:08.025007Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03287672996520996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_task_id.7a50a91303", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\"\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:08.017306Z", "completed_at": "2023-12-18T22:21:08.025365Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:08.030413Z", "completed_at": "2023-12-18T22:21:08.030419Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02564692497253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__task_task_id.7bde801fb1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    task_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\"\nwhere task_id is not null\ngroup by task_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:08.020480Z", "completed_at": "2023-12-18T22:21:08.025623Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:08.030729Z", "completed_at": "2023-12-18T22:21:08.030732Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02583599090576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_sla_task_sla_id.c67b0e6fdf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_sla_id\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\"\nwhere task_sla_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-18T22:21:08.026025Z", "completed_at": "2023-12-18T22:21:08.031518Z"}, {"name": "execute", "started_at": "2023-12-18T22:21:08.032650Z", "completed_at": "2023-12-18T22:21:08.032654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009530067443847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_stg_servicenow__task_sla_task_sla_id.2fa0546da3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    task_sla_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"servicenow_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\"\nwhere task_sla_id is not null\ngroup by task_sla_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 1.937986135482788, "args": {"invocation_command": "dbt docs generate -t postgres", "select": [], "print": true, "target": "postgres", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/servicenow/dbt_servicenow/integration_tests", "quiet": false, "log_level": "info", "version_check": true, "static": false, "use_colors": true, "write_json": true, "which": "generate", "exclude": [], "printer_width": 80, "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "defer": false, "partial_parse_file_diff": true, "strict_mode": false, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "introspect": true, "favor_state": false, "empty_catalog": false, "indirect_selection": "eager", "vars": {}, "partial_parse": true, "static_parser": true, "send_anonymous_usage_stats": true, "show_resource_report": false, "enable_legacy_logger": false, "populate_cache": true, "log_file_max_bytes": 10485760, "log_level_file": "debug", "log_format_file": "debug", "log_format": "default", "compile": true, "macro_debugging": false, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/servicenow/dbt_servicenow/integration_tests/logs", "cache_selected_only": false}}