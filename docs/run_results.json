{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2024-01-18T19:41:45.880532Z", "invocation_id": "a6c6f095-5c56-4d80-b9ea-baf4b7420184", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:43.945706Z", "completed_at": "2024-01-18T19:41:44.275130Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.275671Z", "completed_at": "2024-01-18T19:41:44.275687Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3576531410217285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"change_request_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.301942Z", "completed_at": "2024-01-18T19:41:44.306520Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.307049Z", "completed_at": "2024-01-18T19:41:44.307055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006171226501464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__core_company_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.308974Z", "completed_at": "2024-01-18T19:41:44.312123Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.312656Z", "completed_at": "2024-01-18T19:41:44.312661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00490117073059082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"incident_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.314889Z", "completed_at": "2024-01-18T19:41:44.318116Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.318749Z", "completed_at": "2024-01-18T19:41:44.318754Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005404949188232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"problem_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.320484Z", "completed_at": "2024-01-18T19:41:44.323636Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.324347Z", "completed_at": "2024-01-18T19:41:44.324357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050640106201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"problem_task_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.326872Z", "completed_at": "2024-01-18T19:41:44.371567Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.374025Z", "completed_at": "2024-01-18T19:41:44.374034Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04930686950683594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"sys_user_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.379122Z", "completed_at": "2024-01-18T19:41:44.382923Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.383469Z", "completed_at": "2024-01-18T19:41:44.383475Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006474971771240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_group_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.385167Z", "completed_at": "2024-01-18T19:41:44.387814Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.388315Z", "completed_at": "2024-01-18T19:41:44.388319Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004255771636962891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"task_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.390527Z", "completed_at": "2024-01-18T19:41:44.393581Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.394094Z", "completed_at": "2024-01-18T19:41:44.394099Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004790067672729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"task_sla_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.395754Z", "completed_at": "2024-01-18T19:41:44.396908Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.397533Z", "completed_at": "2024-01-18T19:41:44.397538Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0028159618377685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.change_request_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.399391Z", "completed_at": "2024-01-18T19:41:44.400459Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.401015Z", "completed_at": "2024-01-18T19:41:44.401020Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0028460025787353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.change_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:43.966107Z", "completed_at": "2024-01-18T19:41:44.373727Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.375526Z", "completed_at": "2024-01-18T19:41:44.375529Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.46325087547302246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"servicenow_integration_tests_3\".\"change_task_data\"", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:43.971756Z", "completed_at": "2024-01-18T19:41:44.374654Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.377067Z", "completed_at": "2024-01-18T19:41:44.377070Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4630579948425293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_service_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.402686Z", "completed_at": "2024-01-18T19:41:44.404702Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.406077Z", "completed_at": "2024-01-18T19:41:44.406083Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00599980354309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.incident_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:43.969237Z", "completed_at": "2024-01-18T19:41:44.375776Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.378029Z", "completed_at": "2024-01-18T19:41:44.378036Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4657878875732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_base", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        \n    select \n        cast(null as TEXT) as _dbt_source_relation\n    limit 0", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_base\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.412742Z", "completed_at": "2024-01-18T19:41:44.413924Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.418469Z", "completed_at": "2024-01-18T19:41:44.418474Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009564876556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.problem_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.414264Z", "completed_at": "2024-01-18T19:41:44.415159Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.418739Z", "completed_at": "2024-01-18T19:41:44.418743Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009772062301635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.problem_task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.415447Z", "completed_at": "2024-01-18T19:41:44.416272Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.419020Z", "completed_at": "2024-01-18T19:41:44.419022Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009912967681884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.sys_user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.417364Z", "completed_at": "2024-01-18T19:41:44.418213Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.421063Z", "completed_at": "2024-01-18T19:41:44.421066Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010008096694946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.task_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.425021Z", "completed_at": "2024-01-18T19:41:44.426205Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.444415Z", "completed_at": "2024-01-18T19:41:44.444423Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023005008697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.servicenow_integration_tests.task_sla_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.434359Z", "completed_at": "2024-01-18T19:41:44.778593Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.780440Z", "completed_at": "2024-01-18T19:41:44.780443Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3857290744781494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__core_company", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company_base\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    sys_id\n    \n , \n    cast(null as TEXT) as \n    \n    city\n    \n , \n    cast(null as TEXT) as \n    \n    country\n    \n , \n    cast(null as boolean) as \n    \n    customer\n    \n , \n    cast(null as TEXT) as \n    \n    fax_phone\n    \n , \n    cast(null as TEXT) as \n    \n    fiscal_year\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    notes\n    \n , \n    cast(null as TEXT) as \n    \n    phone\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    street\n    \n , \n    cast(null as TEXT) as \n    \n    sys_class_name\n    \n , \n    cast(null as TEXT) as \n    \n    sys_created_by\n    \n , \n    cast(null as TEXT) as \n    \n    sys_created_on\n    \n , \n    cast(null as integer) as \n    \n    sys_mod_count\n    \n , \n    cast(null as TEXT) as \n    \n    sys_updated_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_updated_on\n    \n , \n    cast(null as boolean) as \n    \n    vendor\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_type\n    \n , \n    cast(null as TEXT) as \n    \n    website\n    \n , \n    cast(null as integer) as \n    \n    zip\n    \n \n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as core_company_id,\n        city as company_city,\n        country as company_country,\n        customer as is_customer,\n        fax_phone as company_fax_phone,\n        fiscal_year,\n        name as company_name,\n        notes,\n        phone as company_phone,\n        state as company_state,\n        street as company_street,\n        sys_class_name,\n        sys_created_by,\n        sys_created_on,\n        sys_mod_count,\n        sys_updated_by,\n        sys_updated_on,\n        vendor as is_vendor,\n        vendor_type,\n        website as company_website,\n        zip as company_zip\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.439130Z", "completed_at": "2024-01-18T19:41:44.778287Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.780176Z", "completed_at": "2024-01-18T19:41:44.780184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3850250244140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__incident", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_impact\n    \n as \n    \n    business_impact\n    \n, \n    \n    \n    business_stc\n    \n as \n    \n    business_stc\n    \n, \n    \n    \n    calendar_stc\n    \n as \n    \n    calendar_stc\n    \n, \n    \n    \n    caller_id_link\n    \n as \n    \n    caller_id_link\n    \n, \n    \n    \n    caller_id_value\n    \n as \n    \n    caller_id_value\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause\n    \n as \n    \n    cause\n    \n, \n    \n    \n    caused_by_link\n    \n as \n    \n    caused_by_link\n    \n, \n    \n    \n    caused_by_value\n    \n as \n    \n    caused_by_value\n    \n, \n    \n    \n    child_incidents\n    \n as \n    \n    child_incidents\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    hold_reason\n    \n as \n    \n    hold_reason\n    \n, \n    \n    \n    incident_state\n    \n as \n    \n    incident_state\n    \n, \n    \n    \n    notify\n    \n as \n    \n    notify\n    \n, \n    \n    \n    origin_id_link\n    \n as \n    \n    origin_id_link\n    \n, \n    \n    \n    origin_id_value\n    \n as \n    \n    origin_id_value\n    \n, \n    \n    \n    parent_incident_link\n    \n as \n    \n    parent_incident_link\n    \n, \n    \n    \n    parent_incident_value\n    \n as \n    \n    parent_incident_value\n    \n, \n    \n    \n    problem_id_link\n    \n as \n    \n    problem_id_link\n    \n, \n    \n    \n    problem_id_value\n    \n as \n    \n    problem_id_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    reopened_time\n    \n as \n    \n    reopened_time\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    severity\n    \n as \n    \n    severity\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as incident_id,\n        cast(sys_created_on as timestamp) as incident_created_at,\n        cast(sys_updated_on as timestamp) as incident_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        business_impact,\n        business_stc,\n        calendar_stc,\n        caller_id_link,\n        cast(caller_id_value as TEXT) as caller_id_value,\n        category,\n        cause,\n        caused_by_link,\n        cast(caused_by_value as TEXT) as caused_by_value,\n        child_incidents,\n        close_code,\n        hold_reason,\n        incident_state,\n        notify,\n        origin_id_link,\n        cast(origin_id_value as TEXT) as origin_id_value,\n        parent_incident_link,\n        cast(parent_incident_value as TEXT) as parent_incident_value,\n        problem_id_link,\n        cast(problem_id_value as TEXT) as problem_id_value,\n        reopen_count,\n        reopened_by_link,\n        cast(reopened_by_value as TEXT) as reopened_by_value,\n        reopened_time,\n        resolved_at,\n        resolved_by_link,\n        cast(resolved_by_value as TEXT) as resolved_by_value,\n        rfc_link,\n        cast(rfc_value as TEXT) as rfc_value,\n        severity,\n        subcategory\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.447467Z", "completed_at": "2024-01-18T19:41:44.779685Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.781845Z", "completed_at": "2024-01-18T19:41:44.781849Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.36360597610473633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    cause_notes\n    \n as \n    \n    cause_notes\n    \n, \n    \n    \n    confirmed_at\n    \n as \n    \n    confirmed_at\n    \n, \n    \n    \n    confirmed_by_link\n    \n as \n    \n    confirmed_by_link\n    \n, \n    \n    \n    confirmed_by_value\n    \n as \n    \n    confirmed_by_value\n    \n, \n    \n    \n    duplicate_of_link\n    \n as \n    \n    duplicate_of_link\n    \n, \n    \n    \n    duplicate_of_value\n    \n as \n    \n    duplicate_of_value\n    \n, \n    \n    \n    first_reported_by_task_link\n    \n as \n    \n    first_reported_by_task_link\n    \n, \n    \n    \n    first_reported_by_task_value\n    \n as \n    \n    first_reported_by_task_value\n    \n, \n    \n    \n    fix_at\n    \n as \n    \n    fix_at\n    \n, \n    \n    \n    fix_by_link\n    \n as \n    \n    fix_by_link\n    \n, \n    \n    \n    fix_by_value\n    \n as \n    \n    fix_by_value\n    \n, \n    \n    \n    fix_communicated_at\n    \n as \n    \n    fix_communicated_at\n    \n, \n    \n    \n    fix_communicated_by_link\n    \n as \n    \n    fix_communicated_by_link\n    \n, \n    \n    \n    fix_communicated_by_value\n    \n as \n    \n    fix_communicated_by_value\n    \n, \n    \n    \n    fix_notes\n    \n as \n    \n    fix_notes\n    \n, \n    \n    \n    known_error\n    \n as \n    \n    known_error\n    \n, \n    \n    \n    major_problem\n    \n as \n    \n    major_problem\n    \n, \n    \n    \n    problem_state\n    \n as \n    \n    problem_state\n    \n, \n    \n    \n    related_incidents\n    \n as \n    \n    related_incidents\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    resolution_code\n    \n as \n    \n    resolution_code\n    \n, \n    \n    \n    resolved_at\n    \n as \n    \n    resolved_at\n    \n, \n    \n    \n    resolved_by_link\n    \n as \n    \n    resolved_by_link\n    \n, \n    \n    \n    resolved_by_value\n    \n as \n    \n    resolved_by_value\n    \n, \n    \n    \n    review_outcome\n    \n as \n    \n    review_outcome\n    \n, \n    \n    \n    rfc_link\n    \n as \n    \n    rfc_link\n    \n, \n    \n    \n    rfc_value\n    \n as \n    \n    rfc_value\n    \n, \n    \n    \n    subcategory\n    \n as \n    \n    subcategory\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    workaround\n    \n as \n    \n    workaround\n    \n, \n    \n    \n    workaround_applied\n    \n as \n    \n    workaround_applied\n    \n, \n    \n    \n    workaround_communicated_at\n    \n as \n    \n    workaround_communicated_at\n    \n, \n    \n    \n    workaround_communicated_by_link\n    \n as \n    \n    workaround_communicated_by_link\n    \n, \n    \n    \n    workaround_communicated_by_value\n    \n as \n    \n    workaround_communicated_by_value\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as problem_id,\n        cast(sys_created_on as timestamp) as problem_created_at,\n        cast(sys_updated_on as timestamp) as problem_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        category as problem_category,\n        cause_notes,\n        confirmed_at as problem_confirmed_at,\n        confirmed_by_link as problem_confirmed_by_link,\n        cast(confirmed_by_value as TEXT) as problem_confirmed_by_value,\n        duplicate_of_link,\n        cast(duplicate_of_value as TEXT) as duplicate_of_value,\n        first_reported_by_task_link as problem_first_reported_by_task_link,\n        first_reported_by_task_value as problem_first_reported_by_task_value,\n        fix_at as problem_fix_at,\n        fix_by_link as problem_fix_by_link,\n        cast(fix_by_value as TEXT) as problem_fix_by_value,\n        fix_communicated_at,\n        fix_communicated_by_link,\n        cast(fix_communicated_by_value as TEXT) as fix_communicated_by_value,\n        fix_notes as problem_fix_notes,\n        known_error as is_known_error,\n        major_problem as is_major_problem,\n        problem_state,\n        related_incidents as problem_related_incidents,\n        reopen_count,\n        reopened_at,\n        reopened_by_link,\n        cast(reopened_by_value as TEXT) as reopened_by_value,\n        resolution_code as problem_resolution_code,\n        resolved_at as problem_resolved_at,\n        resolved_by_link,\n        cast(resolved_by_value as TEXT) as problem_resolved_by_value,\n        review_outcome,\n        rfc_link,\n        cast(rfc_value as TEXT) as rfc_value,\n        subcategory as problem_subcategory,\n        workaround,\n        workaround_applied,\n        workaround_communicated_at,\n        workaround_communicated_by_link,\n        cast(workaround_communicated_by_value as TEXT) as workaround_communicated_by_value \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.426592Z", "completed_at": "2024-01-18T19:41:44.778864Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:44.780967Z", "completed_at": "2024-01-18T19:41:44.780971Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.38936281204223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_request", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    backout_plan\n    \n as \n    \n    backout_plan\n    \n, \n    \n    \n    cab_date\n    \n as \n    \n    cab_date\n    \n, \n    \n    \n    cab_date_time\n    \n as \n    \n    cab_date_time\n    \n, \n    \n    \n    cab_delegate_link\n    \n as \n    \n    cab_delegate_link\n    \n, \n    \n    \n    cab_delegate_value\n    \n as \n    \n    cab_delegate_value\n    \n, \n    \n    \n    cab_recommendation\n    \n as \n    \n    cab_recommendation\n    \n, \n    \n    \n    cab_required\n    \n as \n    \n    cab_required\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    change_plan\n    \n as \n    \n    change_plan\n    \n, \n    \n    \n    chg_model_link\n    \n as \n    \n    chg_model_link\n    \n, \n    \n    \n    chg_model_value\n    \n as \n    \n    chg_model_value\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    conflict_last_run\n    \n as \n    \n    conflict_last_run\n    \n, \n    \n    \n    conflict_status\n    \n as \n    \n    conflict_status\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    implementation_plan\n    \n as \n    \n    implementation_plan\n    \n, \n    \n    \n    justification\n    \n as \n    \n    justification\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    on_hold_task\n    \n as \n    \n    on_hold_task\n    \n, \n    \n    \n    outside_maintenance_schedule\n    \n as \n    \n    outside_maintenance_schedule\n    \n, \n    \n    \n    phase\n    \n as \n    \n    phase\n    \n, \n    \n    \n    phase_state\n    \n as \n    \n    phase_state\n    \n, \n    \n    \n    production_system\n    \n as \n    \n    production_system\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    requested_by_date\n    \n as \n    \n    requested_by_date\n    \n, \n    \n    \n    requested_by_link\n    \n as \n    \n    requested_by_link\n    \n, \n    \n    \n    requested_by_value\n    \n as \n    \n    requested_by_value\n    \n, \n    \n    \n    review_comments\n    \n as \n    \n    review_comments\n    \n, \n    \n    \n    review_date\n    \n as \n    \n    review_date\n    \n, \n    \n    \n    review_status\n    \n as \n    \n    review_status\n    \n, \n    \n    \n    risk\n    \n as \n    \n    risk\n    \n, \n    \n    \n    risk_impact_analysis\n    \n as \n    \n    risk_impact_analysis\n    \n, \n    \n    \n    scope\n    \n as \n    \n    scope\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    std_change_producer_version_link\n    \n as \n    \n    std_change_producer_version_link\n    \n, \n    \n    \n    std_change_producer_version_value\n    \n as \n    \n    std_change_producer_version_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    test_plan\n    \n as \n    \n    test_plan\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unauthorized\n    \n as \n    \n    unauthorized\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as change_request_id,\n        cast(sys_created_on as timestamp) as change_request_created_at,\n        cast(sys_updated_on as timestamp) as change_request_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        backout_plan,\n        cab_date,\n        cab_date_time,\n        cab_delegate_link,\n        cast(cab_delegate_value as TEXT) as cab_delegate_value,\n        cab_recommendation,\n        cab_required as is_cab_required,\n        category as change_request_category,\n        change_plan,\n        chg_model_link,\n        cast(chg_model_value as TEXT) as chg_model_value,\n        close_code as change_request_close_code,\n        conflict_last_run,\n        conflict_status,\n        end_date as change_request_end_date, -- sometimes the actual change and the change request timelines don't line up, so let's specify this is pertaining to the change request.\n        implementation_plan as change_request_implementation_plan,\n        justification as change_request_justification,\n        on_hold as is_change_request_on_hold,\n        on_hold_reason as change_request_on_hold_reason,\n        on_hold_task,\n        outside_maintenance_schedule,\n        phase as change_request_phase,\n        phase_state as change_request_phase_state,\n        production_system as is_production_system,\n        reason as change_request_reason,\n        requested_by_date as change_requested_by_date,\n        requested_by_link as change_requested_by_link,\n        cast(requested_by_value as TEXT) as change_requested_by_value,\n        review_comments,\n        review_date as change_request_review_date,\n        review_status as change_request_review_status,\n        risk as change_request_risk,\n        risk_impact_analysis,\n        scope as change_request_scope,\n        start_date as change_request_start_date,\n        test_plan as change_request_test_plan,\n        type as change_request_type,\n        unauthorized as is_change_request_unauthorized\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.817964Z", "completed_at": "2024-01-18T19:41:45.197924Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.198499Z", "completed_at": "2024-01-18T19:41:45.198506Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.46814990043640137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__problem_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cause_code\n    \n as \n    \n    cause_code\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    other_reason\n    \n as \n    \n    other_reason\n    \n, \n    \n    \n    problem_link\n    \n as \n    \n    problem_link\n    \n, \n    \n    \n    problem_task_type\n    \n as \n    \n    problem_task_type\n    \n, \n    \n    \n    problem_value\n    \n as \n    \n    problem_value\n    \n, \n    \n    \n    reopen_count\n    \n as \n    \n    reopen_count\n    \n, \n    \n    \n    reopened_at\n    \n as \n    \n    reopened_at\n    \n, \n    \n    \n    reopened_by_link\n    \n as \n    \n    reopened_by_link\n    \n, \n    \n    \n    reopened_by_value\n    \n as \n    \n    reopened_by_value\n    \n, \n    \n    \n    started_at\n    \n as \n    \n    started_at\n    \n, \n    \n    \n    started_by_link\n    \n as \n    \n    started_by_link\n    \n, \n    \n    \n    started_by_value\n    \n as \n    \n    started_by_value\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    vendor_link\n    \n as \n    \n    vendor_link\n    \n, \n    \n    \n    vendor_value\n    \n as \n    \n    vendor_value\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as problem_task_id,\n        cast(sys_created_on as timestamp) as problem_task_created_at,\n        cast(sys_updated_on as timestamp) as problem_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        cause_code as problem_task_cause_code,\n        close_code as problem_task_close_code,\n        other_reason,\n        problem_link,\n        problem_task_type,\n        cast(problem_value as TEXT) as problem_value,\n        reopen_count,\n        reopened_at,\n        reopened_by_link,\n        cast(reopened_by_value as TEXT) as reopened_by_value,\n        started_at as problem_task_started_at,\n        started_by_link,\n        cast(started_by_value as TEXT) as started_by_value,\n        vendor_link,\n        cast(vendor_value as TEXT) as vendor_value \n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.828230Z", "completed_at": "2024-01-18T19:41:45.292822Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.294602Z", "completed_at": "2024-01-18T19:41:45.294605Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5061781406402588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user_group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group_base\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as boolean) as \n    \n    active\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_link\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_value\n    \n , \n    cast(null as TEXT) as \n    \n    default_assignee_link\n    \n , \n    cast(null as TEXT) as \n    \n    default_assignee_value\n    \n , \n    cast(null as TEXT) as \n    \n    description\n    \n , \n    cast(null as TEXT) as \n    \n    email\n    \n , \n    cast(null as boolean) as \n    \n    exclude_manager\n    \n , \n    cast(null as boolean) as \n    \n    include_members\n    \n , \n    cast(null as TEXT) as \n    \n    manager_link\n    \n , \n    cast(null as TEXT) as \n    \n    manager_value\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    parent_link\n    \n , \n    cast(null as TEXT) as \n    \n    parent_value\n    \n , \n    cast(null as TEXT) as \n    \n    roles\n    \n , \n    cast(null as TEXT) as \n    \n    source\n    \n , \n    cast(null as TEXT) as \n    \n    sys_created_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_created_on\n    \n , \n    cast(null as TEXT) as \n    \n    sys_id\n    \n , \n    cast(null as integer) as \n    \n    sys_mod_count\n    \n , \n    cast(null as TEXT) as \n    \n    sys_updated_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_updated_on\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n \n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        source_relation, \n        cast(sys_id as TEXT) as sys_user_group_id,\n        cast(sys_created_on as timestamp) as sys_user_group_created_at,\n        cast(sys_updated_on as timestamp) as sys_user_group_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active,\n        cost_center_link,\n        cast(cost_center_value as TEXT) as cost_center_value,\n        default_assignee_link,\n        cast(default_assignee_value as TEXT) as default_assignee_value,\n        description,\n        email,\n        exclude_manager,\n        include_members,\n        manager_link,\n        cast(manager_value as TEXT) as manager_value,\n        name as sys_user_group_name,\n        parent_link,\n        cast(parent_value as TEXT) as parent_value,\n        roles,\n        source,\n        sys_created_by,\n        sys_mod_count,\n        sys_updated_by,\n        type\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.832836Z", "completed_at": "2024-01-18T19:41:45.293101Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.294876Z", "completed_at": "2024-01-18T19:41:45.294879Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.5063331127166748, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    activity_due\n    \n as \n    \n    activity_due\n    \n, \n    \n    \n    additional_assignee_list\n    \n as \n    \n    additional_assignee_list\n    \n, \n    \n    \n    approval\n    \n as \n    \n    approval\n    \n, \n    \n    \n    approval_history\n    \n as \n    \n    approval_history\n    \n, \n    \n    \n    approval_set\n    \n as \n    \n    approval_set\n    \n, \n    \n    \n    assigned_to_link\n    \n as \n    \n    assigned_to_link\n    \n, \n    \n    \n    assigned_to_value\n    \n as \n    \n    assigned_to_value\n    \n, \n    \n    \n    assignment_group_link\n    \n as \n    \n    assignment_group_link\n    \n, \n    \n    \n    assignment_group_value\n    \n as \n    \n    assignment_group_value\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_service_link\n    \n as \n    \n    business_service_link\n    \n, \n    \n    \n    business_service_value\n    \n as \n    \n    business_service_value\n    \n, \n    \n    \n    calendar_duration\n    \n as \n    \n    calendar_duration\n    \n, \n    \n    \n    close_notes\n    \n as \n    \n    close_notes\n    \n, \n    \n    \n    closed_at\n    \n as \n    \n    closed_at\n    \n, \n    \n    \n    closed_by_link\n    \n as \n    \n    closed_by_link\n    \n, \n    \n    \n    closed_by_value\n    \n as \n    \n    closed_by_value\n    \n, \n    \n    \n    cmdb_ci_link\n    \n as \n    \n    cmdb_ci_link\n    \n, \n    \n    \n    cmdb_ci_value\n    \n as \n    \n    cmdb_ci_value\n    \n, \n    \n    \n    comments\n    \n as \n    \n    comments\n    \n, \n    \n    \n    comments_and_work_notes\n    \n as \n    \n    comments_and_work_notes\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    contact_type\n    \n as \n    \n    contact_type\n    \n, \n    \n    \n    contract_link\n    \n as \n    \n    contract_link\n    \n, \n    \n    \n    contract_value\n    \n as \n    \n    contract_value\n    \n, \n    \n    \n    correlation_display\n    \n as \n    \n    correlation_display\n    \n, \n    \n    \n    correlation_id\n    \n as \n    \n    correlation_id\n    \n, \n    \n    \n    delivery_plan_link\n    \n as \n    \n    delivery_plan_link\n    \n, \n    \n    \n    delivery_plan_value\n    \n as \n    \n    delivery_plan_value\n    \n, \n    \n    \n    delivery_task_link\n    \n as \n    \n    delivery_task_link\n    \n, \n    \n    \n    delivery_task_value\n    \n as \n    \n    delivery_task_value\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    escalation\n    \n as \n    \n    escalation\n    \n, \n    \n    \n    expected_start\n    \n as \n    \n    expected_start\n    \n, \n    \n    \n    follow_up\n    \n as \n    \n    follow_up\n    \n, \n    \n    \n    group_list\n    \n as \n    \n    group_list\n    \n, \n    \n    \n    impact\n    \n as \n    \n    impact\n    \n, \n    \n    \n    knowledge\n    \n as \n    \n    knowledge\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    made_sla\n    \n as \n    \n    made_sla\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    opened_at\n    \n as \n    \n    opened_at\n    \n, \n    \n    \n    opened_by_link\n    \n as \n    \n    opened_by_link\n    \n, \n    \n    \n    opened_by_value\n    \n as \n    \n    opened_by_value\n    \n, \n    \n    \n        \n            \n            \"order\"\n            \n        \n    \n as task_order , \n    \n    \n    parent_link\n    \n as \n    \n    parent_link\n    \n, \n    \n    \n    parent_value\n    \n as \n    \n    parent_value\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    reassignment_count\n    \n as \n    \n    reassignment_count\n    \n, \n    \n    \n    rejection_goto_link\n    \n as \n    \n    rejection_goto_link\n    \n, \n    \n    \n    rejection_goto_value\n    \n as \n    \n    rejection_goto_value\n    \n, \n    \n    \n    route_reason\n    \n as \n    \n    route_reason\n    \n, \n    \n    \n    service_offering_link\n    \n as \n    \n    service_offering_link\n    \n, \n    \n    \n    service_offering_value\n    \n as \n    \n    service_offering_value\n    \n, \n    \n    \n    short_description\n    \n as \n    \n    short_description\n    \n, \n    \n    \n    sla_due\n    \n as \n    \n    sla_due\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_effective_number\n    \n as \n    \n    task_effective_number\n    \n, \n    \n    \n    universal_request_link\n    \n as \n    \n    universal_request_link\n    \n, \n    \n    \n    universal_request_value\n    \n as \n    \n    universal_request_value\n    \n, \n    \n    \n    upon_approval\n    \n as \n    \n    upon_approval\n    \n, \n    \n    \n    upon_reject\n    \n as \n    \n    upon_reject\n    \n, \n    \n    \n    urgency\n    \n as \n    \n    urgency\n    \n, \n    \n    \n    watch_list\n    \n as \n    \n    watch_list\n    \n, \n    \n    \n    wf_activity_link\n    \n as \n    \n    wf_activity_link\n    \n, \n    \n    \n    wf_activity_value\n    \n as \n    \n    wf_activity_value\n    \n, \n    \n    \n    work_end\n    \n as \n    \n    work_end\n    \n, \n    \n    \n    work_notes\n    \n as \n    \n    work_notes\n    \n, \n    \n    \n    work_notes_list\n    \n as \n    \n    work_notes_list\n    \n, \n    \n    \n    work_start\n    \n as \n    \n    work_start\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as task_id,\n        cast(sys_created_on as timestamp) as task_created_at,\n        cast(sys_updated_on as timestamp) as task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active as is_task_active,\n        activity_due,\n        additional_assignee_list,\n        approval,\n        approval_history,\n        approval_set,\n        assigned_to_link,\n        cast(assigned_to_value as TEXT) as assigned_to_value,\n        assignment_group_link,\n        cast(assignment_group_value as TEXT) as assignment_group_value,\n        business_duration,\n        business_service_link,\n        cast(business_service_value as TEXT) as business_service_value,\n        calendar_duration,\n        close_notes,\n        closed_at as task_closed_at,\n        closed_by_link,\n        cast(closed_by_value as TEXT) as closed_by_value,\n        cmdb_ci_link,\n        cast(cmdb_ci_value as TEXT) as cmdb_ci_value,\n        comments,\n        comments_and_work_notes,\n        company_link,\n        cast(company_value as TEXT) as company_value,\n        contact_type,\n        contract_link,\n        cast(contract_value as TEXT) as contract_value,\n        correlation_display,\n        correlation_id,\n        delivery_plan_link,\n        cast(delivery_plan_value as TEXT) as delivery_plan_value,\n        delivery_task_link,\n        cast(delivery_task_value as TEXT) as delivery_task_value,\n        description as task_description,\n        due_date as task_due_date_at,\n        escalation,\n        expected_start,\n        follow_up as task_follow_up_at,\n        group_list,\n        impact,\n        knowledge,\n        location_link,\n        cast(location_value as TEXT) as location_value,\n        made_sla as is_made_sla,\n        number as task_number,\n        opened_at as task_opened_at,\n        opened_by_link,\n        cast(opened_by_value as TEXT) as opened_by_value,\n        task_order, -- Renamed within the get_task_columns() macro.\n        parent_link,\n        cast(parent_value as TEXT) as parent_value,\n        priority,\n        reassignment_count,\n        rejection_goto_link,\n        cast(rejection_goto_value as TEXT) as rejection_goto_value,\n        route_reason,\n        service_offering_link,\n        cast(service_offering_value as TEXT) as service_offering_value,\n        short_description,\n        sla_due,\n        state as task_state,\n        sys_class_name,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as TEXT) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        task_effective_number,\n        universal_request_link,\n        cast(universal_request_value as TEXT) as universal_request_value,\n        upon_approval,\n        upon_reject,\n        urgency,\n        watch_list,\n        wf_activity_link,\n        cast(wf_activity_value as TEXT) as wf_activity_value,\n        work_end,\n        work_notes,\n        work_notes_list,\n        work_start\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:44.822633Z", "completed_at": "2024-01-18T19:41:45.292535Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.294331Z", "completed_at": "2024-01-18T19:41:45.294337Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5088319778442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__sys_user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accumulated_roles\n    \n as \n    \n    accumulated_roles\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    avatar\n    \n as \n    \n    avatar\n    \n, \n    \n    \n    building_link\n    \n as \n    \n    building_link\n    \n, \n    \n    \n    building_value\n    \n as \n    \n    building_value\n    \n, \n    \n    \n    calendar_integration\n    \n as \n    \n    calendar_integration\n    \n, \n    \n    \n    city\n    \n as \n    \n    city\n    \n, \n    \n    \n    company_link\n    \n as \n    \n    company_link\n    \n, \n    \n    \n    company_value\n    \n as \n    \n    company_value\n    \n, \n    \n    \n    cost_center_link\n    \n as \n    \n    cost_center_link\n    \n, \n    \n    \n    cost_center_value\n    \n as \n    \n    cost_center_value\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    date_format\n    \n as \n    \n    date_format\n    \n, \n    \n    \n    default_perspective_link\n    \n as \n    \n    default_perspective_link\n    \n, \n    \n    \n    default_perspective_value\n    \n as \n    \n    default_perspective_value\n    \n, \n    \n    \n    department_link\n    \n as \n    \n    department_link\n    \n, \n    \n    \n    department_value\n    \n as \n    \n    department_value\n    \n, \n    \n    \n    edu_status\n    \n as \n    \n    edu_status\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    employee_number\n    \n as \n    \n    employee_number\n    \n, \n    \n    \n    enable_multifactor_authn\n    \n as \n    \n    enable_multifactor_authn\n    \n, \n    \n    \n    failed_attempts\n    \n as \n    \n    failed_attempts\n    \n, \n    \n    \n    first_name\n    \n as \n    \n    first_name\n    \n, \n    \n    \n    gender\n    \n as \n    \n    gender\n    \n, \n    \n    \n    hashed_user_id\n    \n as \n    \n    hashed_user_id\n    \n, \n    \n    \n    home_phone\n    \n as \n    \n    home_phone\n    \n, \n    \n    \n    internal_integration_user\n    \n as \n    \n    internal_integration_user\n    \n, \n    \n    \n    introduction\n    \n as \n    \n    introduction\n    \n, \n    \n    \n    last_login\n    \n as \n    \n    last_login\n    \n, \n    \n    \n    last_login_device\n    \n as \n    \n    last_login_device\n    \n, \n    \n    \n    last_login_time\n    \n as \n    \n    last_login_time\n    \n, \n    \n    \n    last_name\n    \n as \n    \n    last_name\n    \n, \n    \n    \n    last_password\n    \n as \n    \n    last_password\n    \n, \n    \n    \n    ldap_server_link\n    \n as \n    \n    ldap_server_link\n    \n, \n    \n    \n    ldap_server_value\n    \n as \n    \n    ldap_server_value\n    \n, \n    \n    \n    location_link\n    \n as \n    \n    location_link\n    \n, \n    \n    \n    location_value\n    \n as \n    \n    location_value\n    \n, \n    \n    \n    locked_out\n    \n as \n    \n    locked_out\n    \n, \n    \n    \n    manager_link\n    \n as \n    \n    manager_link\n    \n, \n    \n    \n    manager_value\n    \n as \n    \n    manager_value\n    \n, \n    \n    \n    middle_name\n    \n as \n    \n    middle_name\n    \n, \n    \n    \n    mobile_phone\n    \n as \n    \n    mobile_phone\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notification\n    \n as \n    \n    notification\n    \n, \n    \n    \n    password_needs_reset\n    \n as \n    \n    password_needs_reset\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    photo\n    \n as \n    \n    photo\n    \n, \n    \n    \n    preferred_language\n    \n as \n    \n    preferred_language\n    \n, \n    \n    \n    roles\n    \n as \n    \n    roles\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    sys_class_name\n    \n as \n    \n    sys_class_name\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_domain_link\n    \n as \n    \n    sys_domain_link\n    \n, \n    \n    \n    sys_domain_path\n    \n as \n    \n    sys_domain_path\n    \n, \n    \n    \n    sys_domain_value\n    \n as \n    \n    sys_domain_value\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    time_format\n    \n as \n    \n    time_format\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    user_name\n    \n as \n    \n    user_name\n    \n, \n    \n    \n    user_password\n    \n as \n    \n    user_password\n    \n, \n    \n    \n    vip\n    \n as \n    \n    vip\n    \n, \n    \n    \n    web_service_access_only\n    \n as \n    \n    web_service_access_only\n    \n, \n    \n    \n    zip\n    \n as \n    \n    zip\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation,\n        cast(sys_id as TEXT) as user_id,\n        cast(sys_created_on as timestamp) as user_created_at,\n        cast(sys_updated_on as timestamp) as user_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        accumulated_roles,\n        active as is_active,\n        avatar,\n        building_link,\n        cast(building_value as TEXT) as building_value,\n        calendar_integration,\n        city,\n        company_link,\n        cast(company_value as TEXT) as company_value,\n        cost_center_link,\n        cast(cost_center_value as TEXT) as cost_center_value,\n        country,\n        date_format,\n        default_perspective_link,\n        cast(default_perspective_value as TEXT) as default_perspective_value,\n        department_link,\n        cast(department_value as TEXT) as department_value,\n        edu_status,\n        email,\n        employee_number,\n        enable_multifactor_authn,\n        failed_attempts,\n        first_name,\n        gender,\n        hashed_user_id,\n        home_phone,\n        internal_integration_user,\n        introduction,\n        last_login as last_login_day_date,\n        last_login_device,\n        last_login_time as last_login_at,\n        last_name,\n        last_password,\n        ldap_server_link,\n        cast(ldap_server_value as TEXT) as ldap_server_value,\n        location_link,\n        cast(location_value as TEXT) as location_value,\n        locked_out,\n        manager_link,\n        cast(manager_value as TEXT) as manager_value,\n        middle_name,\n        mobile_phone,\n        name as sys_user_name,\n        notification,\n        password_needs_reset,\n        phone,\n        photo,\n        preferred_language,\n        roles,\n        schedule_link,\n        cast(schedule_value as TEXT) as schedule_value,\n        source,\n        state,\n        sys_class_name,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as TEXT) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        time_format,\n        time_zone,\n        title,\n        user_name,\n        user_password,\n        vip,\n        web_service_access_only,\n        zip\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.331164Z", "completed_at": "2024-01-18T19:41:45.594944Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.595462Z", "completed_at": "2024-01-18T19:41:45.595465Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2974967956542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci_service", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service_base\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    attributes\n    \n , \n    cast(null as TEXT) as \n    \n    business_unit_link\n    \n , \n    cast(null as TEXT) as \n    \n    business_unit_value\n    \n , \n    cast(null as TEXT) as \n    \n    category\n    \n , \n    cast(null as TEXT) as \n    \n    company_link\n    \n , \n    cast(null as TEXT) as \n    \n    company_value\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as TEXT) as \n    \n    cost_cc\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_link\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_value\n    \n , \n    cast(null as TEXT) as \n    \n    managed_by_link\n    \n , \n    cast(null as TEXT) as \n    \n    managed_by_value\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer_link\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer_value\n    \n , \n    cast(null as TEXT) as \n    \n    model_id_link\n    \n , \n    cast(null as TEXT) as \n    \n    model_id_value\n    \n , \n    cast(null as TEXT) as \n    \n    model_number\n    \n , \n    cast(null as boolean) as \n    \n    monitor\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    owned_by_link\n    \n , \n    cast(null as TEXT) as \n    \n    owned_by_value\n    \n , \n    cast(null as TEXT) as \n    \n    service_classification\n    \n , \n    cast(null as TEXT) as \n    \n    service_level_requirement\n    \n , \n    cast(null as TEXT) as \n    \n    service_owner_delegate_link\n    \n , \n    cast(null as TEXT) as \n    \n    service_owner_delegate_value\n    \n , \n    cast(null as TEXT) as \n    \n    short_description\n    \n , \n    cast(null as TEXT) as \n    \n    sla_link\n    \n , \n    cast(null as TEXT) as \n    \n    sla_value\n    \n , \n    cast(null as TEXT) as \n    \n    state\n    \n , \n    cast(null as TEXT) as \n    \n    subcategory\n    \n , \n    cast(null as TEXT) as \n    \n    sys_class_name\n    \n , \n    cast(null as TEXT) as \n    \n    sys_class_path\n    \n , \n    cast(null as TEXT) as \n    \n    sys_created_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_created_on\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_link\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_path\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_value\n    \n , \n    cast(null as TEXT) as \n    \n    sys_id\n    \n , \n    cast(null as integer) as \n    \n    sys_mod_count\n    \n , \n    cast(null as TEXT) as \n    \n    sys_updated_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_updated_on\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_link\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_value\n    \n \n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        source_relation,\n        cast(sys_id as TEXT) as cmdb_ci_service_id,\n        cast(sys_created_on as timestamp) as cmdb_ci_service_created_at,\n        cast(sys_updated_on as timestamp) as cmdb_ci_service_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        attributes,\n        business_unit_link,\n        cast(business_unit_value as TEXT) as business_unit_value,\n        category,\n        company_link,\n        cast(company_value as TEXT) as company_value,\n        cost,\n        cost_cc,\n        cost_center_link,\n        cast(cost_center_value as TEXT) as cost_center_value,\n        managed_by_link,\n        cast(managed_by_value as TEXT) as managed_by_value,\n        manufacturer_link,\n        cast(manufacturer_value as TEXT) as manufacturer_value,\n        model_id_link,\n        cast(model_id_value as TEXT) as model_id_value,\n        model_number,\n        monitor,\n        name as cmdb_ci_service_name,\n        owned_by_link,\n        cast(owned_by_value as TEXT) as owned_by_value,\n        service_classification,\n        service_level_requirement,\n        short_description,\n        sla_link,\n        cast(sla_value as TEXT) as sla_value,\n        state as cmdb_ci_service_state,\n        subcategory,\n        sys_class_name,\n        sys_class_path,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as TEXT) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        vendor_link,\n        cast(vendor_value as TEXT) as vendor_value\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.287764Z", "completed_at": "2024-01-18T19:41:45.579494Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.594274Z", "completed_at": "2024-01-18T19:41:45.594283Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.34272074699401855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__task_sla", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    business_duration\n    \n as \n    \n    business_duration\n    \n, \n    \n    \n    business_pause_duration\n    \n as \n    \n    business_pause_duration\n    \n, \n    \n    \n    business_percentage\n    \n as \n    \n    business_percentage\n    \n, \n    \n    \n    business_time_left\n    \n as \n    \n    business_time_left\n    \n, \n    \n    \n    duration\n    \n as \n    \n    duration\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    has_breached\n    \n as \n    \n    has_breached\n    \n, \n    \n    \n    original_breach_time\n    \n as \n    \n    original_breach_time\n    \n, \n    \n    \n    pause_duration\n    \n as \n    \n    pause_duration\n    \n, \n    \n    \n    pause_time\n    \n as \n    \n    pause_time\n    \n, \n    \n    \n    percentage\n    \n as \n    \n    percentage\n    \n, \n    \n    \n    planned_end_time\n    \n as \n    \n    planned_end_time\n    \n, \n    \n    \n    schedule_link\n    \n as \n    \n    schedule_link\n    \n, \n    \n    \n    schedule_value\n    \n as \n    \n    schedule_value\n    \n, \n    \n    \n    sla_link\n    \n as \n    \n    sla_link\n    \n, \n    \n    \n    sla_value\n    \n as \n    \n    sla_value\n    \n, \n    \n    \n    stage\n    \n as \n    \n    stage\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    sys_created_by\n    \n as \n    \n    sys_created_by\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_mod_count\n    \n as \n    \n    sys_mod_count\n    \n, \n    \n    \n    sys_updated_by\n    \n as \n    \n    sys_updated_by\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n, \n    \n    \n    task_link\n    \n as \n    \n    task_link\n    \n, \n    \n    \n    task_value\n    \n as \n    \n    task_value\n    \n, \n    \n    \n    time_left\n    \n as \n    \n    time_left\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as task_sla_id,\n        cast(sys_created_on as timestamp) as task_sla_created_at,\n        cast(sys_updated_on as timestamp) as task_sla_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        active,\n        business_duration,\n        business_pause_duration,\n        business_percentage,\n        business_time_left,\n        duration,\n        end_time,\n        has_breached,\n        original_breach_time,\n        pause_duration,\n        pause_time,\n        percentage,\n        planned_end_time,\n        schedule_link,\n        cast(schedule_value as TEXT) as schedule_value,\n        sla_link,\n        cast(sla_value as TEXT) as sla_value,\n        stage,\n        start_time,\n        sys_created_by,\n        sys_mod_count,\n        sys_updated_by,\n        task_link,\n        cast(task_value as TEXT) as task_value,\n        time_left,\n        timezone\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.623716Z", "completed_at": "2024-01-18T19:41:45.649915Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.668351Z", "completed_at": "2024-01-18T19:41:45.668361Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04629802703857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__core_company_core_company_id__source_relation.85b30d325b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        core_company_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company\"\n    group by core_company_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.662357Z", "completed_at": "2024-01-18T19:41:45.670198Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.672526Z", "completed_at": "2024-01-18T19:41:45.672531Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0395662784576416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__core_company_core_company_id.e8ef462897", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect core_company_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company\"\nwhere core_company_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.674011Z", "completed_at": "2024-01-18T19:41:45.682113Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.682711Z", "completed_at": "2024-01-18T19:41:45.682720Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011663675308227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__incident_incident_id__source_relation.4383616e6a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        incident_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\"\n    group by incident_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.678671Z", "completed_at": "2024-01-18T19:41:45.683943Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.685326Z", "completed_at": "2024-01-18T19:41:45.685331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05475306510925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__incident_incident_id.b01cee4a78", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect incident_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__incident\"\nwhere incident_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.337006Z", "completed_at": "2024-01-18T19:41:45.670708Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.673059Z", "completed_at": "2024-01-18T19:41:45.673063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4034268856048584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__cmdb_ci", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_base\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    cast(null as TEXT) as \n    \n    attributes\n    \n , \n    cast(null as TEXT) as \n    \n    business_unit_link\n    \n , \n    cast(null as TEXT) as \n    \n    business_unit_value\n    \n , \n    cast(null as TEXT) as \n    \n    category\n    \n , \n    cast(null as TEXT) as \n    \n    company_link\n    \n , \n    cast(null as TEXT) as \n    \n    company_value\n    \n , \n    cast(null as float) as \n    \n    cost\n    \n , \n    cast(null as TEXT) as \n    \n    cost_cc\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_link\n    \n , \n    cast(null as TEXT) as \n    \n    cost_center_value\n    \n , \n    cast(null as TEXT) as \n    \n    managed_by_link\n    \n , \n    cast(null as TEXT) as \n    \n    managed_by_value\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer_link\n    \n , \n    cast(null as TEXT) as \n    \n    manufacturer_value\n    \n , \n    cast(null as TEXT) as \n    \n    model_id_link\n    \n , \n    cast(null as TEXT) as \n    \n    model_id_value\n    \n , \n    cast(null as TEXT) as \n    \n    model_number\n    \n , \n    cast(null as TEXT) as \n    \n    name\n    \n , \n    cast(null as TEXT) as \n    \n    owned_by_link\n    \n , \n    cast(null as TEXT) as \n    \n    owned_by_value\n    \n , \n    cast(null as TEXT) as \n    \n    subcategory\n    \n , \n    cast(null as TEXT) as \n    \n    sys_class_name\n    \n , \n    cast(null as TEXT) as \n    \n    sys_class_path\n    \n , \n    cast(null as TEXT) as \n    \n    sys_created_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_created_on\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_link\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_path\n    \n , \n    cast(null as TEXT) as \n    \n    sys_domain_value\n    \n , \n    cast(null as TEXT) as \n    \n    sys_id\n    \n , \n    cast(null as integer) as \n    \n    sys_mod_count\n    \n , \n    cast(null as TEXT) as \n    \n    sys_updated_by\n    \n , \n    cast(null as timestamp) as \n    \n    sys_updated_on\n    \n , \n    cast(null as boolean) as \n    \n    unverified\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_link\n    \n , \n    cast(null as TEXT) as \n    \n    vendor_value\n    \n \n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as cmdb_ci_id,\n        cast(sys_created_on as timestamp) as cmdb_ci_created_at,\n        cast(sys_updated_on as timestamp) as cmdb_ci_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        attributes,\n        business_unit_link,\n        cast(business_unit_value as TEXT) as business_unit_value,\n        category,\n        company_link,\n        cast(company_value as TEXT) as company_value,\n        cost,\n        cost_cc,\n        cost_center_link,\n        cast(cost_center_value as TEXT) as cost_center_value,\n        managed_by_link,\n        cast(managed_by_value as TEXT) as managed_by_value,\n        manufacturer_link,\n        cast(manufacturer_value as TEXT) as manufacturer_value,\n        model_id_link,\n        cast(model_id_value as TEXT) as model_id_value,\n        model_number,\n        name as cmdb_ci_name,\n        owned_by_link,\n        cast(owned_by_value as TEXT) as owned_by_value,\n        subcategory,\n        sys_class_name,\n        sys_class_path,\n        sys_created_by,\n        sys_domain_link,\n        sys_domain_path,\n        cast(sys_domain_value as TEXT) as sys_domain_value,\n        sys_mod_count,\n        sys_updated_by,\n        unverified,\n        vendor_link,\n        cast(vendor_value as TEXT) as vendor_value\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.325966Z", "completed_at": "2024-01-18T19:41:45.668752Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.670975Z", "completed_at": "2024-01-18T19:41:45.670980Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4106631278991699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.stg_servicenow__change_task", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task_base\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    change_request_link\n    \n as \n    \n    change_request_link\n    \n, \n    \n    \n    change_request_value\n    \n as \n    \n    change_request_value\n    \n, \n    \n    \n    change_task_type\n    \n as \n    \n    change_task_type\n    \n, \n    \n    \n    close_code\n    \n as \n    \n    close_code\n    \n, \n    \n    \n    created_from\n    \n as \n    \n    created_from\n    \n, \n    \n    \n    on_hold\n    \n as \n    \n    on_hold\n    \n, \n    \n    \n    on_hold_reason\n    \n as \n    \n    on_hold_reason\n    \n, \n    \n    \n    planned_end_date\n    \n as \n    \n    planned_end_date\n    \n, \n    \n    \n    planned_start_date\n    \n as \n    \n    planned_start_date\n    \n, \n    \n    \n    sys_created_on\n    \n as \n    \n    sys_created_on\n    \n, \n    \n    \n    sys_id\n    \n as \n    \n    sys_id\n    \n, \n    \n    \n    sys_updated_on\n    \n as \n    \n    sys_updated_on\n    \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        cast(sys_id as TEXT) as change_task_id,\n        cast(sys_created_on as timestamp) as change_task_created_at,\n        cast(sys_updated_on as timestamp) as change_task_updated_at,\n        _fivetran_deleted,\n        _fivetran_synced,\n        change_request_link,\n        cast(change_request_value as TEXT) as change_request_value,\n        change_task_type,\n        close_code as change_task_close_code,\n        created_from as change_task_created_from,\n        on_hold as is_change_on_hold,\n        on_hold_reason as change_on_hold_reason,\n        planned_end_date as change_task_planned_end_date,\n        planned_start_date as change_task_planned_start_date\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.685608Z", "completed_at": "2024-01-18T19:41:45.735561Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.740972Z", "completed_at": "2024-01-18T19:41:45.740978Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05791115760803223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__problem_problem_id__source_relation.135d98438b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        problem_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\"\n    group by problem_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.737692Z", "completed_at": "2024-01-18T19:41:45.748906Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.750540Z", "completed_at": "2024-01-18T19:41:45.750547Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016888141632080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_problem_id.2b0f45ffad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\"\nwhere problem_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.745787Z", "completed_at": "2024-01-18T19:41:45.750812Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.756892Z", "completed_at": "2024-01-18T19:41:45.756899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02114582061767578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_request_change_request_id.0f2ee81c5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_request_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\"\nwhere change_request_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.742654Z", "completed_at": "2024-01-18T19:41:45.751128Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.757274Z", "completed_at": "2024-01-18T19:41:45.757279Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022083044052124023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__change_request_change_request_id__source_relation.f8d65569ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        change_request_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\"\n    group by change_request_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.752761Z", "completed_at": "2024-01-18T19:41:45.759323Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.765647Z", "completed_at": "2024-01-18T19:41:45.765653Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.016710996627807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__problem_task_problem_task_id__source_relation.e59f50cae6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        problem_task_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\"\n    group by problem_task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.760692Z", "completed_at": "2024-01-18T19:41:45.770536Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.776099Z", "completed_at": "2024-01-18T19:41:45.776105Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019640207290649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__problem_task_problem_task_id.2d07d24f54", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect problem_task_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\"\nwhere problem_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.767215Z", "completed_at": "2024-01-18T19:41:45.775741Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.781066Z", "completed_at": "2024-01-18T19:41:45.781072Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017599105834960938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_group_sys_user_group_id__source_relation.6fd66f39ed", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        sys_user_group_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group\"\n    group by sys_user_group_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.770833Z", "completed_at": "2024-01-18T19:41:45.776645Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.781781Z", "completed_at": "2024-01-18T19:41:45.781784Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01822519302368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__task_task_id__source_relation.4b5ec4b727", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\"\n    group by task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.777705Z", "completed_at": "2024-01-18T19:41:45.783000Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.787924Z", "completed_at": "2024-01-18T19:41:45.787929Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013777971267700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_group_sys_user_group_id.a4600fb5c8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sys_user_group_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group\"\nwhere sys_user_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.785144Z", "completed_at": "2024-01-18T19:41:45.793433Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.797596Z", "completed_at": "2024-01-18T19:41:45.797602Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016196727752685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_task_id.7a50a91303", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\"\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.789590Z", "completed_at": "2024-01-18T19:41:45.797333Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.802154Z", "completed_at": "2024-01-18T19:41:45.802160Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018397808074951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__sys_user_user_id__source_relation.2a8836be3c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\"\n    group by user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.794001Z", "completed_at": "2024-01-18T19:41:45.798312Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.803504Z", "completed_at": "2024-01-18T19:41:45.803508Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01666116714477539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__sys_user_user_id.90a8733b9d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.799140Z", "completed_at": "2024-01-18T19:41:45.804128Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.809835Z", "completed_at": "2024-01-18T19:41:45.809842Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014119386672973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__cmdb_ci_service_cmdb_ci_service_id__source_relation.e596372710", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        cmdb_ci_service_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service\"\n    group by cmdb_ci_service_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.806470Z", "completed_at": "2024-01-18T19:41:45.814351Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.819762Z", "completed_at": "2024-01-18T19:41:45.819767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017165184020996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__task_sla_task_sla_id__source_relation.e9939b7a70", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_sla_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\"\n    group by task_sla_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.811383Z", "completed_at": "2024-01-18T19:41:45.819453Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.831875Z", "completed_at": "2024-01-18T19:41:45.831883Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.027230024337768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__cmdb_ci_service_cmdb_ci_service_id.f7770250de", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cmdb_ci_service_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service\"\nwhere cmdb_ci_service_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.815030Z", "completed_at": "2024-01-18T19:41:45.820496Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.833357Z", "completed_at": "2024-01-18T19:41:45.833360Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.024241924285888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__task_sla_task_sla_id.c67b0e6fdf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_sla_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task_sla\"\nwhere task_sla_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.821322Z", "completed_at": "2024-01-18T19:41:45.834259Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.839489Z", "completed_at": "2024-01-18T19:41:45.839494Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.024292945861816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__task_enhanced", "compiled": true, "compiled_code": "with task as (\n\n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__task\"\n),\n\nproblem_task as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem_task\"\n),\n\nproblem as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__problem\"\n),\n\nchange_task as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\"\n),\n\nchange_request as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_request\"\n),\n\nsys_user as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user\"\n),\n\nsys_user_group as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__sys_user_group\"\n),\n\ncore_company as (\n    \n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__core_company\"\n),\n\ncmdb_ci as (\n\n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci\"\n),\n\ncmdb_ci_service as (\n\n  select *\n  from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci_service\"\n),\n\ntask_enhanced as (\n\nselect \n\n  task.task_id,\n  task.is_task_active,\n  task.task_description,\n  task.activity_due,\n  task.priority,\n  task.impact,\n  task.urgency,\n  task.task_state,\n  task.task_number,\n  task.task_order,\n  case when problem_task.problem_task_id is not null \n    then true \n    else false \n  end as is_problem_task,\n  case when change_task.change_task_id is not null \n    then true \n    else false \n  end as is_change_task,\n  task.task_created_at,\n  task.sys_created_by,\n  task.cmdb_ci_link,\n  task.cmdb_ci_value,\n  cmdb_ci.cmdb_ci_name,\n  creator.email as creator_email,\n  creator.manager_value as creator_manager_value,\n  creator.department_value as creator_department_value,\n  creator.sys_user_name as creator_name,\n  creator.roles as creator_roles,\n  task.task_updated_at,\n  cast (date_trunc('day', task.task_updated_at) as date) as task_updated_date,\n  task.sys_updated_by,\n  updater.email as updater_email,\n  updater.manager_value as updater_manager_value,\n  updater.department_value as updater_department_value,\n  updater.sys_user_name as updater_name,\n  updater.roles as updater_roles,\n  task.task_opened_at,\n  task.opened_by_link,\n  task.opened_by_value, \n  opener.manager_value as opener_manager_value,\n  opener.email as opener_email,\n  opener.department_value as opener_department_value,\n  opener.sys_user_name as opener_name,\n  opener.roles as opener_roles,\n  task.assigned_to_link, \n  task.assigned_to_value,\n  assignee.email as assignee_email,\n  assignee.manager_value as assignee_manager_value,\n  assignee.department_value as assignee_department_value,\n  assignee.sys_user_name as assignee_name,\n  assignee.roles as assignee_roles,\n  task.task_closed_at,\n  \n        (\n        (\n        ((task.task_closed_at)::date - (task.task_opened_at)::date)\n     * 24 + date_part('hour', (task.task_closed_at)::timestamp) - date_part('hour', (task.task_opened_at)::timestamp))\n     * 60 + date_part('minute', (task.task_closed_at)::timestamp) - date_part('minute', (task.task_opened_at)::timestamp))\n     as task_minutes_open_to_close,\n  task.closed_by_link,\n  task.closed_by_value,\n  closer.email as closer_email,\n  closer.manager_value as closer_manager_value,\n  closer.department_value as closer_department_value,\n  closer.sys_user_name as closer_name,\n  closer.roles as closer_roles,\n  task.task_effective_number,\n  task.additional_assignee_list,\n  task.approval,\n  task.approval_history,\n  task.approval_set,\n  task.assignment_group_link,\n  task.assignment_group_value,\n  assignment_group.sys_user_group_name as assignment_group_name,\n  task.business_duration,\n  task.calendar_duration,\n  task.business_service_link,\n  task.business_service_value,\n  business_service.cmdb_ci_service_name as business_service_name,\n  task.close_notes,\n  task.comments,\n  task.comments_and_work_notes,\n  task.company_link,\n  task.company_value, \n  core_company.company_name,\n  task.contact_type, \n  task.task_due_date_at,\n  task.expected_start,\n  task.task_follow_up_at,\n  task.group_list,\n  task.knowledge,\n  task.is_made_sla,\n  task.sla_due,\n  task.parent_link, \n  task.parent_value,\n  task.reassignment_count,\n  task.route_reason,\n  task.short_description,\n  task.sys_class_name,\n  task.sys_domain_link,\n  task.sys_domain_path,\n  task.sys_domain_value,\n  task.upon_approval,\n  task.upon_reject,\n  task.watch_list,\n  task.work_start,\n  task.work_end,\n  task.work_notes,\n  task.work_notes_list,\n  problem_task.problem_task_cause_code,\n  problem_task.problem_task_close_code,\n  problem_task.problem_task_type,\n  problem_task.problem_task_started_at,\n  problem_task.started_by_value,\n  problem_task_starter.email as problem_task_starter_email,\n  problem_task_starter.manager_value as problem_task_starter_manager_value,\n  problem_task_starter.department_value as problem_task_starter_department_value,\n  problem_task_starter.sys_user_name as problem_task_starter_name,\n  problem_task_starter.roles as problem_task_starter_roles, \n  problem.problem_id as associated_problem_id,\n  problem.problem_category,\n  problem.cause_notes,\n  problem.problem_confirmed_at,\n  problem.problem_confirmed_by_value,\n  problem_confirmer.email as problem_confirmer_email,\n  problem_confirmer.manager_value as problem_confirmer_manager_value,\n  problem_confirmer.department_value as problem_confirmer_department_value,\n  problem_confirmer.sys_user_name as problem_confirmer_name,\n  problem_confirmer.roles as problem_confirmer_roles,\n  problem.problem_first_reported_by_task_value,\n  problem_reporter.email as problem_reporter_email,\n  problem_reporter.manager_value as problem_reporter_manager_value,\n  problem_reporter.department_value as problem_reporter_department_value,\n  problem_reporter.sys_user_name as problem_reporter_name,\n  problem_reporter.roles as problem_reporter_roles,\n  problem.problem_fix_at,\n  problem.problem_fix_by_value,\n  problem_fixer.email as problem_fixer_email,\n  problem_fixer.manager_value as problem_fixer_manager_value,\n  problem_fixer.department_value as problem_fixer_department_value,\n  problem_fixer.sys_user_name as problem_fixer_name,\n  problem_fixer.roles as problem_fixer_roles,\n  problem.problem_fix_notes,\n  problem.is_known_error as problem_is_known_error,\n  problem.is_major_problem,\n  problem.problem_state,\n  problem.problem_related_incidents,\n  problem.problem_resolution_code,\n  problem.problem_resolved_at,\n  problem.problem_resolved_by_value,\n  problem.workaround_applied,\n  problem_resolver.email as problem_resolver_email,\n  problem_resolver.manager_value as problem_resolver_manager_value,\n  problem_resolver.department_value as problem_resolver_department_value,\n  problem_resolver.sys_user_name as problem_resolver_name,\n  problem_resolver.roles as problem_resolver_roles,\n  problem.problem_subcategory,\n  problem.problem_created_at,\n  problem.problem_updated_at,\n  change_task.change_task_type,\n  change_task.change_task_close_code,\n  change_task.change_task_created_from,\n  change_task.is_change_on_hold,\n  change_task.change_on_hold_reason,\n  change_task.change_task_planned_end_date,\n  change_task.change_task_planned_start_date,\n  change_request.change_request_id as associated_change_request_id,\n  change_request.change_request_created_at,\n  change_request.change_request_updated_at,\n  change_request.change_request_category,\n  change_request.change_plan,\n  change_request.change_request_close_code,\n  change_request.change_request_end_date,\n  change_request.change_request_implementation_plan,\n  change_request.change_request_justification,\n  change_request.is_change_request_on_hold,\n  change_request.change_request_on_hold_reason,\n  change_request.change_request_phase,\n  change_request.change_request_phase_state,\n  change_request.change_request_reason,\n  change_request.change_requested_by_date,\n  change_request.change_requested_by_value,\n  change_requester.email as change_requester_email,\n  change_requester.manager_value as change_requester_manager_value,\n  change_requester.department_value as change_requester_department_value,\n  change_requester.sys_user_name as change_requester_name,\n  change_requester.roles as change_requester_roles,\n  change_request.change_request_review_date,\n  change_request.change_request_review_status,\n  change_request.change_request_risk,\n  change_request.change_request_scope,\n  change_request.change_request_start_date,\n  change_request.change_request_test_plan,\n  change_request.change_request_type,\n  change_request.is_change_request_unauthorized,\n  task.source_relation\n\nfrom task\nleft join core_company\n  on task.company_value = core_company.core_company_id\nleft join problem_task\n  on task.task_id = problem_task.problem_task_id\nleft join sys_user problem_task_starter\n  on problem_task.started_by_value = problem_task_starter.user_id\nleft join problem\n  on problem_task.problem_value = problem.problem_id\nleft join sys_user problem_confirmer\n  on problem.problem_confirmed_by_value = problem_confirmer.user_id\nleft join sys_user problem_reporter\n  on problem.problem_first_reported_by_task_value = problem_reporter.user_id\nleft join sys_user problem_fixer\n  on problem.problem_fix_by_value = problem_fixer.user_id\nleft join sys_user problem_resolver\n  on problem.problem_resolved_by_value = problem_resolver.user_id\nleft join change_task\n  on task.task_id = change_task.change_task_id\nleft join change_request\n  on change_task.change_request_value = change_request.change_request_id\nleft join sys_user change_requester\n  on change_request.change_requested_by_value = change_requester.user_id\nleft join sys_user assignee\n  on task.assigned_to_value = assignee.user_id\nleft join sys_user closer \n  on task.closed_by_value = closer.user_id\nleft join sys_user opener\n  on task.opened_by_value = opener.user_id\nleft join sys_user creator\n  on task.sys_created_by = creator.user_id\nleft join sys_user updater\n  on task.sys_updated_by = updater.user_id\nleft join sys_user_group assignment_group\n  on task.assignment_group_value = assignment_group.sys_user_group_id\nleft join cmdb_ci\n  on task.cmdb_ci_value = cmdb_ci.cmdb_ci_id\nleft join cmdb_ci_service business_service\n  on task.business_service_value = business_service.cmdb_ci_service_id\n)\n\nselect *\nfrom task_enhanced", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__task_enhanced\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.836016Z", "completed_at": "2024-01-18T19:41:45.843983Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.848774Z", "completed_at": "2024-01-18T19:41:45.848780Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016417980194091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__change_task_change_task_id__source_relation.11bf5182ff", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        change_task_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\"\n    group by change_task_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.840218Z", "completed_at": "2024-01-18T19:41:45.844716Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.849360Z", "completed_at": "2024-01-18T19:41:45.849364Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018854856491088867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_stg_servicenow__cmdb_ci_cmdb_ci_id__source_relation.4d25f1839d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        cmdb_ci_id, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci\"\n    group by cmdb_ci_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.844976Z", "completed_at": "2024-01-18T19:41:45.849622Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.855266Z", "completed_at": "2024-01-18T19:41:45.855270Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017102956771850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__change_task_change_task_id.2d5ae34a7b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect change_task_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__change_task\"\nwhere change_task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.850402Z", "completed_at": "2024-01-18T19:41:45.855918Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.859993Z", "completed_at": "2024-01-18T19:41:45.859997Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015517950057983398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_stg_servicenow__cmdb_ci_cmdb_ci_id.83f2c6d37c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cmdb_ci_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_stg_servicenow\".\"stg_servicenow__cmdb_ci\"\nwhere cmdb_ci_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.858127Z", "completed_at": "2024-01-18T19:41:45.864253Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.869192Z", "completed_at": "2024-01-18T19:41:45.869198Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014606952667236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.servicenow.servicenow__activity_summary", "compiled": true, "compiled_code": "with ticket_enhanced as (\n\n    select * \n    from \"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__task_enhanced\"\n)\n\nselect \n    task_updated_date,\n    task_state,\n    priority,\n    impact,\n    urgency,\n    source_relation,\n    count(distinct case when is_task_active then task_id end) as total_active_tasks,\n    count(distinct case when is_problem_task and is_task_active then task_id end) as total_active_problem_tasks,\n    count(distinct case when is_change_task and is_task_active then task_id end) as total_active_change_tasks,\n    count(distinct associated_problem_id) as total_associated_problems, \n    sum(problem_related_incidents) as total_incidents_caused_by_problems,\n    count(distinct associated_change_request_id) as total_change_requests,\n    count(distinct case when task_closed_at is not null then task_id end) as total_closed_tasks,\n    avg(task_minutes_open_to_close) as average_minutes_open_to_close,\n    count(case when is_made_sla then 1 end) as total_tasks_made_slas\n\nfrom ticket_enhanced\ngroup by 1,2,3,4,5,6", "relation_name": "\"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__activity_summary\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.860254Z", "completed_at": "2024-01-18T19:41:45.868889Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.870473Z", "completed_at": "2024-01-18T19:41:45.870477Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.015184164047241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.not_null_servicenow__task_enhanced_task_id.76cea62cda", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect task_id\nfrom \"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__task_enhanced\"\nwhere task_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.864630Z", "completed_at": "2024-01-18T19:41:45.869688Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.871844Z", "completed_at": "2024-01-18T19:41:45.871847Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009823083877563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.unique_servicenow__task_enhanced_task_id.a974c4dbbc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    task_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__task_enhanced\"\nwhere task_id is not null\ngroup by task_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-18T19:41:45.873391Z", "completed_at": "2024-01-18T19:41:45.877846Z"}, {"name": "execute", "started_at": "2024-01-18T19:41:45.878376Z", "completed_at": "2024-01-18T19:41:45.878381Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00668787956237793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.servicenow.dbt_utils_unique_combination_of_columns_servicenow__activity_summary_task_updated_date__task_state__priority__impact__urgency__source_relation.8ca2665c4e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        task_updated_date, task_state, priority, impact, urgency, source_relation\n    from \"postgres\".\"reddit_ads_integration_tests_3_servicenow\".\"servicenow__activity_summary\"\n    group by task_updated_date, task_state, priority, impact, urgency, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.874755620956421, "args": {"show_resource_report": false, "select": [], "favor_state": false, "printer_width": 80, "introspect": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/servicenow/dbt_servicenow/integration_tests/logs", "target": "postgres", "vars": {}, "cache_selected_only": false, "defer": false, "print": true, "exclude": [], "warn_error_options": {"include": [], "exclude": []}, "use_colors_file": true, "quiet": false, "populate_cache": true, "partial_parse": true, "strict_mode": false, "use_colors": true, "enable_legacy_logger": false, "log_level_file": "debug", "partial_parse_file_diff": true, "static_parser": true, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "log_level": "info", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/servicenow/dbt_servicenow/integration_tests", "indirect_selection": "eager", "macro_debugging": false, "write_json": true, "invocation_command": "dbt docs generate -t postgres", "profiles_dir": "/Users/joseph.markiewicz/.dbt", "empty_catalog": false, "static": false, "version_check": true, "log_format": "default", "compile": true, "log_format_file": "debug", "which": "generate"}}